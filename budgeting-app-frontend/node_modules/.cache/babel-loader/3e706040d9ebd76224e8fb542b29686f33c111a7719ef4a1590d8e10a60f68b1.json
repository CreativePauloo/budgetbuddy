{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pmwen\\\\OneDrive\\\\Desktop\\\\budgeting-app\\\\budgeting-app-frontend\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faFilePdf } from '@fortawesome/free-solid-svg-icons';\nimport Sidebar from './Sidebar';\nimport SummaryCards from './SummaryCards';\nimport ChartsSection from './ChartsSection';\nimport TransactionsTable from './TransactionsTable';\nimport TransactionForm from './TransactionForm';\nimport BudgetSummary from './BudgetSummary';\nimport ProfileSection from './ProfileSection';\nimport NotificationsList from './NotificationsList';\nimport Chatbot from '../common/Chatbot';\nimport { formatMoney, getCategoryIcon, formatMonthlyData } from '../common/helpers';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [activeMenu, setActiveMenu] = useState('dashboard');\n  const [dashboardData, setDashboardData] = useState(null);\n  const [user, setUser] = useState(null);\n  const [notifications, setNotifications] = useState([]);\n  const [expenseCategories, setExpenseCategories] = useState([]);\n  const [expenseTransactions, setExpenseTransactions] = useState([]);\n  const [budgets, setBudgets] = useState([]);\n  const [monthlyTrends, setMonthlyTrends] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [showTransactionForm, setShowTransactionForm] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [formError, setFormError] = useState('');\n  const navigate = useNavigate();\n\n  // Fetch all dashboard data\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n      try {\n        const [dashboardRes, userRes, notificationsRes, budgetsRes, monthlyRes] = await Promise.all([axios.get('http://localhost:8000/api/dashboard/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get('http://localhost:8000/api/user/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get('http://localhost:8000/api/notifications/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).catch(() => ({\n          data: []\n        })), axios.get('http://localhost:8000/api/budgets/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).catch(() => ({\n          data: []\n        })), axios.get('http://localhost:8000/api/transactions/monthly/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).catch(() => ({\n          data: []\n        }))]);\n        const processedData = {\n          ...dashboardRes.data,\n          savings_goal: {\n            ...dashboardRes.data.savings_goal,\n            current_amount: Number(dashboardRes.data.savings_goal.current_amount),\n            target_amount: Number(dashboardRes.data.savings_goal.target_amount)\n          }\n        };\n        setDashboardData(processedData);\n        setUser(userRes.data);\n        setNotifications(notificationsRes.data);\n        setBudgets(budgetsRes.data);\n        setMonthlyTrends(formatMonthlyData(monthlyRes.data));\n        if (dashboardRes.data.recent_transactions) {\n          processExpenseData(dashboardRes.data.recent_transactions);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        localStorage.removeItem('access_token');\n        navigate('/login');\n      }\n    };\n    fetchDashboardData();\n  }, [navigate]);\n  const processExpenseData = transactions => {\n    const expenses = transactions.filter(t => t.type === 'expense');\n    setExpenseTransactions(expenses);\n    const categoryTotals = {};\n    expenses.forEach(expense => {\n      if (!categoryTotals[expense.category]) {\n        categoryTotals[expense.category] = 0;\n      }\n      categoryTotals[expense.category] += Number(expense.amount);\n    });\n    setExpenseCategories(Object.entries(categoryTotals).map(([name, amount]) => ({\n      name,\n      amount,\n      icon: getCategoryIcon(name)\n    })));\n  };\n\n  // Handle transaction submission with auto-categorization\n  const handleAddTransaction = async transaction => {\n    const token = localStorage.getItem('access_token');\n    setIsSubmitting(true);\n    setFormError('');\n    try {\n      // Auto-categorize if description exists but no category\n      if (transaction.description && !transaction.category) {\n        try {\n          const catResponse = await axios.post('http://localhost:8000/api/categorize/', {\n            description: transaction.description\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          transaction.category = catResponse.data.category;\n        } catch (catError) {\n          console.log('Auto-categorization failed, using default');\n          transaction.category = 'other';\n        }\n      }\n      const response = await axios.post('http://localhost:8000/api/transactions/', {\n        ...transaction,\n        user: user.id,\n        amount: parseFloat(transaction.amount)\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Optimistic UI update\n      setDashboardData(prev => ({\n        ...prev,\n        recent_transactions: [response.data, ...prev.recent_transactions.slice(0, 4)],\n        income: transaction.type === 'income' ? prev.income + parseFloat(transaction.amount) : prev.income,\n        expenses: transaction.type === 'expense' ? prev.expenses + parseFloat(transaction.amount) : prev.expenses\n      }));\n\n      // Process updated expense data\n      processExpenseData([response.data, ...expenseTransactions]);\n      setShowTransactionForm(false);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Transaction error:', error);\n      setFormError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Failed to add transaction. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // [Keep all your other existing functions unchanged]\n  // handleLogout, markNotificationAsRead, generateReport, \n  // handleEditTransaction, handleDeleteTransaction, refreshData\n\n  if (!dashboardData || !user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    income,\n    expenses,\n    savings_goal,\n    recent_transactions\n  } = dashboardData;\n  const savings = income - expenses;\n  const progressPercentage = savings_goal.target_amount > 0 ? savings_goal.current_amount / savings_goal.target_amount * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      activeMenu: activeMenu,\n      setActiveMenu: setActiveMenu,\n      notifications: notifications,\n      handleLogout: () => {\n        localStorage.removeItem('access_token');\n        navigate('/login');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: activeMenu.charAt(0).toUpperCase() + activeMenu.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: [activeMenu === 'expenses' && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => setShowTransactionForm(true),\n            disabled: isSubmitting,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), isSubmitting ? 'Processing...' : 'Add Transaction']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), activeMenu === 'overview' && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => generateReport(),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faFilePdf\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), \" Generate Report\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chatbot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), showTransactionForm && /*#__PURE__*/_jsxDEV(TransactionForm, {\n      onClose: () => !isSubmitting && setShowTransactionForm(false),\n      onSubmit: handleAddTransaction,\n      isSubmitting: isSubmitting,\n      error: formError,\n      categories: ['food', 'transportation', 'housing', 'entertainment', 'utilities', 'health', 'education', 'other']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"mQ7xl+HWxSw9ngbNCFxZ+mxpFmQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","FontAwesomeIcon","faPlus","faFilePdf","Sidebar","SummaryCards","ChartsSection","TransactionsTable","TransactionForm","BudgetSummary","ProfileSection","NotificationsList","Chatbot","formatMoney","getCategoryIcon","formatMonthlyData","jsxDEV","_jsxDEV","Dashboard","_s","activeMenu","setActiveMenu","dashboardData","setDashboardData","user","setUser","notifications","setNotifications","expenseCategories","setExpenseCategories","expenseTransactions","setExpenseTransactions","budgets","setBudgets","monthlyTrends","setMonthlyTrends","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","showTransactionForm","setShowTransactionForm","isSubmitting","setIsSubmitting","formError","setFormError","navigate","fetchDashboardData","token","localStorage","getItem","dashboardRes","userRes","notificationsRes","budgetsRes","monthlyRes","Promise","all","get","headers","Authorization","catch","data","processedData","savings_goal","current_amount","Number","target_amount","recent_transactions","processExpenseData","error","console","removeItem","transactions","expenses","filter","t","type","categoryTotals","forEach","expense","category","amount","Object","entries","map","name","icon","handleAddTransaction","transaction","description","catResponse","post","catError","log","response","id","parseFloat","prev","slice","income","_error$response","_error$response$data","detail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","savings","progressPercentage","handleLogout","charAt","toUpperCase","onClick","disabled","generateReport","onClose","onSubmit","categories","_c","$RefreshReg$"],"sources":["C:/Users/pmwen/OneDrive/Desktop/budgeting-app/budgeting-app-frontend/src/components/dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faFilePdf } from '@fortawesome/free-solid-svg-icons';\r\nimport Sidebar from './Sidebar';\r\nimport SummaryCards from './SummaryCards';\r\nimport ChartsSection from './ChartsSection';\r\nimport TransactionsTable from './TransactionsTable';\r\nimport TransactionForm from './TransactionForm';\r\nimport BudgetSummary from './BudgetSummary';\r\nimport ProfileSection from './ProfileSection';\r\nimport NotificationsList from './NotificationsList';\r\nimport Chatbot from '../common/Chatbot';\r\nimport { formatMoney, getCategoryIcon, formatMonthlyData } from '../common/helpers';\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  const [activeMenu, setActiveMenu] = useState('dashboard');\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [expenseCategories, setExpenseCategories] = useState([]);\r\n  const [expenseTransactions, setExpenseTransactions] = useState([]);\r\n  const [budgets, setBudgets] = useState([]);\r\n  const [monthlyTrends, setMonthlyTrends] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [showTransactionForm, setShowTransactionForm] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [formError, setFormError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch all dashboard data\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      const token = localStorage.getItem('access_token');\r\n      if (!token) {\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const [dashboardRes, userRes, notificationsRes, budgetsRes, monthlyRes] = await Promise.all([\r\n          axios.get('http://localhost:8000/api/dashboard/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }),\r\n          axios.get('http://localhost:8000/api/user/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }),\r\n          axios.get('http://localhost:8000/api/notifications/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }).catch(() => ({ data: [] })),\r\n          axios.get('http://localhost:8000/api/budgets/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }).catch(() => ({ data: [] })),\r\n          axios.get('http://localhost:8000/api/transactions/monthly/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }).catch(() => ({ data: [] }))\r\n        ]);\r\n\r\n        const processedData = {\r\n          ...dashboardRes.data,\r\n          savings_goal: {\r\n            ...dashboardRes.data.savings_goal,\r\n            current_amount: Number(dashboardRes.data.savings_goal.current_amount),\r\n            target_amount: Number(dashboardRes.data.savings_goal.target_amount)\r\n          }\r\n        };\r\n        \r\n        setDashboardData(processedData);\r\n        setUser(userRes.data);\r\n        setNotifications(notificationsRes.data);\r\n        setBudgets(budgetsRes.data);\r\n        setMonthlyTrends(formatMonthlyData(monthlyRes.data));\r\n\r\n        if (dashboardRes.data.recent_transactions) {\r\n          processExpenseData(dashboardRes.data.recent_transactions);\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        localStorage.removeItem('access_token');\r\n        navigate('/login');\r\n      }\r\n    };\r\n\r\n    fetchDashboardData();\r\n  }, [navigate]);\r\n\r\n  const processExpenseData = (transactions) => {\r\n    const expenses = transactions.filter(t => t.type === 'expense');\r\n    setExpenseTransactions(expenses);\r\n    \r\n    const categoryTotals = {};\r\n    expenses.forEach(expense => {\r\n      if (!categoryTotals[expense.category]) {\r\n        categoryTotals[expense.category] = 0;\r\n      }\r\n      categoryTotals[expense.category] += Number(expense.amount);\r\n    });\r\n    \r\n    setExpenseCategories(Object.entries(categoryTotals).map(([name, amount]) => ({\r\n      name,\r\n      amount,\r\n      icon: getCategoryIcon(name)\r\n    })));\r\n  };\r\n\r\n  // Handle transaction submission with auto-categorization\r\n  const handleAddTransaction = async (transaction) => {\r\n    const token = localStorage.getItem('access_token');\r\n    setIsSubmitting(true);\r\n    setFormError('');\r\n\r\n    try {\r\n      // Auto-categorize if description exists but no category\r\n      if (transaction.description && !transaction.category) {\r\n        try {\r\n          const catResponse = await axios.post(\r\n            'http://localhost:8000/api/categorize/',\r\n            { description: transaction.description },\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n          transaction.category = catResponse.data.category;\r\n        } catch (catError) {\r\n          console.log('Auto-categorization failed, using default');\r\n          transaction.category = 'other';\r\n        }\r\n      }\r\n\r\n      const response = await axios.post(\r\n        'http://localhost:8000/api/transactions/',\r\n        {\r\n          ...transaction,\r\n          user: user.id,\r\n          amount: parseFloat(transaction.amount)\r\n        },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      // Optimistic UI update\r\n      setDashboardData(prev => ({\r\n        ...prev,\r\n        recent_transactions: [response.data, ...prev.recent_transactions.slice(0, 4)],\r\n        income: transaction.type === 'income' ? \r\n          prev.income + parseFloat(transaction.amount) : prev.income,\r\n        expenses: transaction.type === 'expense' ? \r\n          prev.expenses + parseFloat(transaction.amount) : prev.expenses\r\n      }));\r\n\r\n      // Process updated expense data\r\n      processExpenseData([response.data, ...expenseTransactions]);\r\n\r\n      setShowTransactionForm(false);\r\n    } catch (error) {\r\n      console.error('Transaction error:', error);\r\n      setFormError(error.response?.data?.detail || 'Failed to add transaction. Please try again.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // [Keep all your other existing functions unchanged]\r\n  // handleLogout, markNotificationAsRead, generateReport, \r\n  // handleEditTransaction, handleDeleteTransaction, refreshData\r\n\r\n  if (!dashboardData || !user) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n\r\n  const { income, expenses, savings_goal, recent_transactions } = dashboardData;\r\n  const savings = income - expenses;\r\n  const progressPercentage = savings_goal.target_amount > 0 \r\n    ? (savings_goal.current_amount / savings_goal.target_amount) * 100 \r\n    : 0;\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <Sidebar \r\n        activeMenu={activeMenu} \r\n        setActiveMenu={setActiveMenu} \r\n        notifications={notifications}\r\n        handleLogout={() => {\r\n          localStorage.removeItem('access_token');\r\n          navigate('/login');\r\n        }}\r\n      />\r\n\r\n      <div className=\"main-content\">\r\n        <div className=\"content-header\">\r\n          <h1>{activeMenu.charAt(0).toUpperCase() + activeMenu.slice(1)}</h1>\r\n          <div className=\"header-actions\">\r\n            {activeMenu === 'expenses' && (\r\n              <button \r\n                className=\"btn btn-primary\"\r\n                onClick={() => setShowTransactionForm(true)}\r\n                disabled={isSubmitting}\r\n              >\r\n                <FontAwesomeIcon icon={faPlus} /> \r\n                {isSubmitting ? 'Processing...' : 'Add Transaction'}\r\n              </button>\r\n            )}\r\n            {activeMenu === 'overview' && (\r\n              <button \r\n                className=\"btn btn-secondary\"\r\n                onClick={() => generateReport()}\r\n              >\r\n                <FontAwesomeIcon icon={faFilePdf} /> Generate Report\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* [Keep all your existing view sections unchanged] */}\r\n        {/* dashboard, expenses, overview, profile, notifications */}\r\n        \r\n      </div>\r\n\r\n      <Chatbot />\r\n      \r\n      {showTransactionForm && (\r\n        <TransactionForm \r\n          onClose={() => !isSubmitting && setShowTransactionForm(false)}\r\n          onSubmit={handleAddTransaction}\r\n          isSubmitting={isSubmitting}\r\n          error={formError}\r\n          categories={[\r\n            'food', 'transportation', 'housing',\r\n            'entertainment', 'utilities', 'health',\r\n            'education', 'other'\r\n          ]}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}