{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pmwen\\\\OneDrive\\\\Desktop\\\\budgeting-app\\\\budgeting-app-frontend\\\\src\\\\components\\\\dashboard\\\\TransactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faMagic, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport './TransactionForm.css';\n\n// Memoized Suggestion Button Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuggestionButton = /*#__PURE__*/React.memo(_c = ({\n  suggestion,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  type: \"button\",\n  className: `suggestion ${suggestion.isSelected ? 'selected' : ''}`,\n  onClick: onClick,\n  children: [suggestion.name, /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"confidence-badge\",\n    children: [Math.round(suggestion.confidence * 100), \"%\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), suggestion.isSelected && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: faCheckCircle,\n    className: \"selected-icon\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this));\n_c2 = SuggestionButton;\nconst TransactionForm = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  initialData = null,\n  isSubmitting = false,\n  error = '',\n  categories = [],\n  incomeCategories = []\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    type: 'expense',\n    amount: '',\n    description: '',\n    category: categories.length > 0 ? categories[0] : '',\n    date: new Date().toISOString().split('T')[0]\n  });\n  const [aiSuggestions, setAiSuggestions] = useState([]);\n  const [isPredicting, setIsPredicting] = useState(false);\n  const timerRef = useRef(null);\n  const formDataRef = useRef(formData);\n\n  // Sync ref with formData\n  useEffect(() => {\n    formDataRef.current = formData;\n  }, [formData]);\n\n  // Reset form when opening or when initialData changes\n  useEffect(() => {\n    if (isOpen) {\n      var _initialData$date;\n      const newData = initialData ? {\n        type: initialData.type,\n        amount: initialData.amount.toString(),\n        description: initialData.description,\n        category: initialData.category,\n        date: ((_initialData$date = initialData.date) === null || _initialData$date === void 0 ? void 0 : _initialData$date.split('T')[0]) || new Date().toISOString().split('T')[0]\n      } : {\n        type: 'expense',\n        amount: '',\n        description: '',\n        category: categories.length > 0 ? categories[0] : '',\n        date: new Date().toISOString().split('T')[0]\n      };\n      setFormData(newData);\n      setAiSuggestions([]);\n    }\n  }, [isOpen, initialData, categories]);\n\n  // Stable callback for suggestion selection\n  const handleSuggestionSelect = useCallback(category => {\n    setFormData(prev => ({\n      ...prev,\n      category\n    }));\n    setAiSuggestions(prev => prev.map(suggestion => ({\n      ...suggestion,\n      isSelected: suggestion.name === category\n    })));\n  }, []);\n\n  // Handle AI suggestions without infinite loops\n  useEffect(() => {\n    if (!isOpen || isPredicting) return;\n    const {\n      description,\n      amount\n    } = formData;\n    const {\n      description: prevDesc,\n      amount: prevAmt\n    } = formDataRef.current;\n    const shouldFetch = description.length > 3 && amount && (description !== prevDesc || amount !== prevAmt);\n    if (shouldFetch) {\n      clearTimeout(timerRef.current);\n      timerRef.current = setTimeout(async () => {\n        setIsPredicting(true);\n        try {\n          const response = await axios.post('https://git.heroku.com/budgetbuddy-application.git/api/predict-category/', {\n            description: formData.description,\n            amount: formData.amount,\n            date: formData.date\n          });\n          setAiSuggestions(prev => {\n            const newSuggestions = [{\n              name: response.data.category,\n              confidence: response.data.confidence,\n              isSelected: false\n            }, ...response.data.alternatives.map(alt => ({\n              name: alt.category,\n              confidence: alt.score,\n              isSelected: false\n            }))];\n\n            // Preserve selection if category is already selected\n            return newSuggestions.map(suggestion => ({\n              ...suggestion,\n              isSelected: suggestion.name === formData.category\n            }));\n          });\n          if (response.data.confidence > 0.7) {\n            setFormData(prev => ({\n              ...prev,\n              category: response.data.category\n            }));\n          }\n        } catch (error) {\n          console.error('Prediction failed:', error);\n        } finally {\n          setIsPredicting(false);\n        }\n      }, 500);\n    }\n    return () => clearTimeout(timerRef.current);\n  }, [formData.description, formData.amount, formData.date, isOpen, isPredicting]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (name === 'type') {\n      const newCategories = value === 'income' ? incomeCategories : categories;\n      setFormData(prev => ({\n        ...prev,\n        category: newCategories.length > 0 ? newCategories[0] : ''\n      }));\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const transactionData = {\n      ...formData,\n      amount: parseFloat(formData.amount),\n      date: formData.date || new Date().toISOString().split('T')[0]\n    };\n    onSubmit(transactionData);\n  };\n  const currentCategories = formData.type === 'income' ? incomeCategories : categories;\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-modal-overlay\",\n    onClick: () => !isSubmitting && onClose(),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: initialData ? 'Edit Transaction' : 'Add Transaction'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => !isSubmitting && onClose(),\n          disabled: isSubmitting,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Transaction Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"radio-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"type\",\n                  value: \"expense\",\n                  checked: formData.type === 'expense',\n                  onChange: handleChange,\n                  disabled: isSubmitting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-custom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this), \"Expense\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"type\",\n                  value: \"income\",\n                  checked: formData.type === 'income',\n                  onChange: handleChange,\n                  disabled: isSubmitting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-custom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this), \"Income\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"amount\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"amount\",\n              name: \"amount\",\n              value: formData.amount,\n              onChange: handleChange,\n              step: \"0.01\",\n              min: \"0\",\n              required: true,\n              disabled: isSubmitting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description-with-ai\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"description\",\n                name: \"description\",\n                value: formData.description,\n                onChange: handleChange,\n                required: true,\n                disabled: isSubmitting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), isPredicting && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ai-loading\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faMagic,\n                  spin: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), aiSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-suggestions\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"AI Suggestions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestion-buttons\",\n              children: aiSuggestions.map(suggestion => /*#__PURE__*/_jsxDEV(SuggestionButton, {\n                suggestion: suggestion,\n                onClick: () => handleSuggestionSelect(suggestion.name)\n              }, suggestion.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"category\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"category\",\n              name: \"category\",\n              value: formData.category,\n              onChange: handleChange,\n              required: true,\n              disabled: isSubmitting,\n              children: currentCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category,\n                children: category.charAt(0).toUpperCase() + category.slice(1)\n              }, category, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"date\",\n              name: \"date\",\n              value: formData.date,\n              onChange: handleChange,\n              required: true,\n              disabled: isSubmitting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => !isSubmitting && onClose(),\n              className: \"btn btn-secondary\",\n              disabled: isSubmitting,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: isSubmitting,\n              children: isSubmitting ? 'Processing...' : initialData ? 'Update' : 'Add'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionForm, \"0lIJYFYrYLZhL5ajanbpGr6P05M=\");\n_c3 = TransactionForm;\nexport default TransactionForm;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SuggestionButton$React.memo\");\n$RefreshReg$(_c2, \"SuggestionButton\");\n$RefreshReg$(_c3, \"TransactionForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","FontAwesomeIcon","faTimes","faMagic","faCheckCircle","axios","jsxDEV","_jsxDEV","SuggestionButton","memo","_c","suggestion","onClick","type","className","isSelected","children","name","Math","round","confidence","fileName","_jsxFileName","lineNumber","columnNumber","icon","_c2","TransactionForm","isOpen","onClose","onSubmit","initialData","isSubmitting","error","categories","incomeCategories","_s","formData","setFormData","amount","description","category","length","date","Date","toISOString","split","aiSuggestions","setAiSuggestions","isPredicting","setIsPredicting","timerRef","formDataRef","current","_initialData$date","newData","toString","handleSuggestionSelect","prev","map","prevDesc","prevAmt","shouldFetch","clearTimeout","setTimeout","response","post","newSuggestions","data","alternatives","alt","score","console","handleChange","e","value","target","newCategories","handleSubmit","preventDefault","transactionData","parseFloat","currentCategories","stopPropagation","disabled","checked","onChange","htmlFor","id","step","min","required","spin","charAt","toUpperCase","slice","_c3","$RefreshReg$"],"sources":["C:/Users/pmwen/OneDrive/Desktop/budgeting-app/budgeting-app-frontend/src/components/dashboard/TransactionForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faMagic, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport './TransactionForm.css';\r\n\r\n// Memoized Suggestion Button Component\r\nconst SuggestionButton = React.memo(({ suggestion, onClick }) => (\r\n  <button\r\n    type=\"button\"\r\n    className={`suggestion ${suggestion.isSelected ? 'selected' : ''}`}\r\n    onClick={onClick}\r\n  >\r\n    {suggestion.name}\r\n    <span className=\"confidence-badge\">\r\n      {Math.round(suggestion.confidence * 100)}%\r\n    </span>\r\n    {suggestion.isSelected && (\r\n      <FontAwesomeIcon icon={faCheckCircle} className=\"selected-icon\" />\r\n    )}\r\n  </button>\r\n));\r\n\r\nconst TransactionForm = ({ \r\n  isOpen, \r\n  onClose, \r\n  onSubmit, \r\n  initialData = null, \r\n  isSubmitting = false,\r\n  error = '',\r\n  categories = [],\r\n  incomeCategories = []\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    type: 'expense',\r\n    amount: '',\r\n    description: '',\r\n    category: categories.length > 0 ? categories[0] : '',\r\n    date: new Date().toISOString().split('T')[0]\r\n  });\r\n\r\n  const [aiSuggestions, setAiSuggestions] = useState([]);\r\n  const [isPredicting, setIsPredicting] = useState(false);\r\n  const timerRef = useRef(null);\r\n  const formDataRef = useRef(formData);\r\n\r\n  // Sync ref with formData\r\n  useEffect(() => {\r\n    formDataRef.current = formData;\r\n  }, [formData]);\r\n\r\n  // Reset form when opening or when initialData changes\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      const newData = initialData ? {\r\n        type: initialData.type,\r\n        amount: initialData.amount.toString(),\r\n        description: initialData.description,\r\n        category: initialData.category,\r\n        date: initialData.date?.split('T')[0] || new Date().toISOString().split('T')[0]\r\n      } : {\r\n        type: 'expense',\r\n        amount: '',\r\n        description: '',\r\n        category: categories.length > 0 ? categories[0] : '',\r\n        date: new Date().toISOString().split('T')[0]\r\n      };\r\n      \r\n      setFormData(newData);\r\n      setAiSuggestions([]);\r\n    }\r\n  }, [isOpen, initialData, categories]);\r\n\r\n  // Stable callback for suggestion selection\r\n  const handleSuggestionSelect = useCallback((category) => {\r\n    setFormData(prev => ({ ...prev, category }));\r\n    setAiSuggestions(prev => \r\n      prev.map(suggestion => ({\r\n        ...suggestion,\r\n        isSelected: suggestion.name === category\r\n      }))\r\n    );\r\n  }, []);\r\n\r\n  // Handle AI suggestions without infinite loops\r\n  useEffect(() => {\r\n    if (!isOpen || isPredicting) return;\r\n\r\n    const { description, amount } = formData;\r\n    const { description: prevDesc, amount: prevAmt } = formDataRef.current;\r\n\r\n    const shouldFetch = description.length > 3 && \r\n                       amount && \r\n                       (description !== prevDesc || amount !== prevAmt);\r\n\r\n    if (shouldFetch) {\r\n      clearTimeout(timerRef.current);\r\n      timerRef.current = setTimeout(async () => {\r\n        setIsPredicting(true);\r\n        try {\r\n          const response = await axios.post(\r\n            'https://git.heroku.com/budgetbuddy-application.git/api/predict-category/',\r\n            {\r\n              description: formData.description,\r\n              amount: formData.amount,\r\n              date: formData.date\r\n            }\r\n          );\r\n          \r\n          setAiSuggestions(prev => {\r\n            const newSuggestions = [\r\n              { \r\n                name: response.data.category, \r\n                confidence: response.data.confidence,\r\n                isSelected: false \r\n              },\r\n              ...response.data.alternatives.map(alt => ({\r\n                name: alt.category,\r\n                confidence: alt.score,\r\n                isSelected: false\r\n              }))\r\n            ];\r\n            \r\n            // Preserve selection if category is already selected\r\n            return newSuggestions.map(suggestion => ({\r\n              ...suggestion,\r\n              isSelected: suggestion.name === formData.category\r\n            }));\r\n          });\r\n\r\n          if (response.data.confidence > 0.7) {\r\n            setFormData(prev => ({\r\n              ...prev,\r\n              category: response.data.category\r\n            }));\r\n          }\r\n        } catch (error) {\r\n          console.error('Prediction failed:', error);\r\n        } finally {\r\n          setIsPredicting(false);\r\n        }\r\n      }, 500);\r\n    }\r\n\r\n    return () => clearTimeout(timerRef.current);\r\n  }, [formData.description, formData.amount, formData.date, isOpen, isPredicting]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    \r\n    if (name === 'type') {\r\n      const newCategories = value === 'income' ? incomeCategories : categories;\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        category: newCategories.length > 0 ? newCategories[0] : ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const transactionData = {\r\n      ...formData,\r\n      amount: parseFloat(formData.amount),\r\n      date: formData.date || new Date().toISOString().split('T')[0]\r\n    };\r\n    onSubmit(transactionData);\r\n  };\r\n\r\n  const currentCategories = formData.type === 'income' ? incomeCategories : categories;\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"transaction-modal-overlay\" onClick={() => !isSubmitting && onClose()}>\r\n      <div className=\"transaction-modal\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h2>{initialData ? 'Edit Transaction' : 'Add Transaction'}</h2>\r\n          <button \r\n            className=\"close-btn\" \r\n            onClick={() => !isSubmitting && onClose()} \r\n            disabled={isSubmitting}\r\n          >\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"modal-content\">\r\n          {error && <div className=\"form-error\">{error}</div>}\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Transaction Type</label>\r\n              <div className=\"radio-group\">\r\n                <label className=\"radio-label\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"type\"\r\n                    value=\"expense\"\r\n                    checked={formData.type === 'expense'}\r\n                    onChange={handleChange}\r\n                    disabled={isSubmitting}\r\n                  />\r\n                  <span className=\"radio-custom\"></span>\r\n                  Expense\r\n                </label>\r\n                <label className=\"radio-label\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"type\"\r\n                    value=\"income\"\r\n                    checked={formData.type === 'income'}\r\n                    onChange={handleChange}\r\n                    disabled={isSubmitting}\r\n                  />\r\n                  <span className=\"radio-custom\"></span>\r\n                  Income\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"amount\">Amount</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"amount\"\r\n                name=\"amount\"\r\n                value={formData.amount}\r\n                onChange={handleChange}\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                required\r\n                disabled={isSubmitting}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <div className=\"description-with-ai\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  value={formData.description}\r\n                  onChange={handleChange}\r\n                  required\r\n                  disabled={isSubmitting}\r\n                />\r\n                {isPredicting && (\r\n                  <span className=\"ai-loading\">\r\n                    <FontAwesomeIcon icon={faMagic} spin />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {aiSuggestions.length > 0 && (\r\n              <div className=\"ai-suggestions\">\r\n                <label>AI Suggestions</label>\r\n                <div className=\"suggestion-buttons\">\r\n                  {aiSuggestions.map((suggestion) => (\r\n                    <SuggestionButton\r\n                      key={suggestion.name}\r\n                      suggestion={suggestion}\r\n                      onClick={() => handleSuggestionSelect(suggestion.name)}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"category\">Category</label>\r\n              <select\r\n                id=\"category\"\r\n                name=\"category\"\r\n                value={formData.category}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={isSubmitting}\r\n              >\r\n                {currentCategories.map(category => (\r\n                  <option key={category} value={category}>\r\n                    {category.charAt(0).toUpperCase() + category.slice(1)}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"date\">Date</label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"date\"\r\n                name=\"date\"\r\n                value={formData.date}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={isSubmitting}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-actions\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => !isSubmitting && onClose()}\r\n                className=\"btn btn-secondary\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                disabled={isSubmitting}\r\n              >\r\n                {isSubmitting ? 'Processing...' : initialData ? 'Update' : 'Add'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}