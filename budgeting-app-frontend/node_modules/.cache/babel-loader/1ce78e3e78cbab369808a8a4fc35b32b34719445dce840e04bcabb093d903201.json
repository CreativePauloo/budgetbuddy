{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pmwen\\\\OneDrive\\\\Desktop\\\\budgeting-app\\\\budgeting-app-frontend\\\\src\\\\components\\\\dashboard\\\\TransactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faMagic, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport './TransactionForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionForm = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  initialData = null,\n  isSubmitting = false,\n  error = '',\n  categories = [],\n  incomeCategories = []\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    type: 'expense',\n    amount: '',\n    description: '',\n    category: categories.length > 0 ? categories[0] : '',\n    date: new Date().toISOString().split('T')[0]\n  });\n  const [aiSuggestions, setAiSuggestions] = useState([]);\n  const [isPredicting, setIsPredicting] = useState(false);\n  const timerRef = useRef(null);\n  const formDataRef = useRef(formData);\n\n  // Sync ref with formData\n  useEffect(() => {\n    formDataRef.current = formData;\n  }, [formData]);\n\n  // Reset form when opening or when initialData changes\n  useEffect(() => {\n    if (isOpen) {\n      var _initialData$date;\n      const newData = initialData ? {\n        type: initialData.type,\n        amount: initialData.amount.toString(),\n        description: initialData.description,\n        category: initialData.category,\n        date: ((_initialData$date = initialData.date) === null || _initialData$date === void 0 ? void 0 : _initialData$date.split('T')[0]) || new Date().toISOString().split('T')[0]\n      } : {\n        type: 'expense',\n        amount: '',\n        description: '',\n        category: categories.length > 0 ? categories[0] : '',\n        date: new Date().toISOString().split('T')[0]\n      };\n      setFormData(newData);\n      setAiSuggestions([]);\n    }\n  }, [isOpen, initialData, categories]);\n\n  // Handle AI suggestions without infinite loops\n  useEffect(() => {\n    if (!isOpen || isPredicting) return;\n    const {\n      description,\n      amount\n    } = formData;\n    const {\n      description: prevDesc,\n      amount: prevAmt\n    } = formDataRef.current;\n    const shouldFetch = description.length > 3 && amount && (description !== prevDesc || amount !== prevAmt);\n    if (shouldFetch) {\n      clearTimeout(timerRef.current);\n      timerRef.current = setTimeout(async () => {\n        setIsPredicting(true);\n        try {\n          const response = await axios.post('http://localhost:8000/api/predict-category/', {\n            description: formData.description,\n            amount: formData.amount,\n            date: formData.date\n          });\n          setAiSuggestions([{\n            name: response.data.category,\n            confidence: response.data.confidence,\n            isSelected: false\n          }, ...response.data.alternatives.map(alt => ({\n            name: alt.category,\n            confidence: alt.score,\n            isSelected: false\n          }))]);\n          if (response.data.confidence > 0.7) {\n            setFormData(prev => ({\n              ...prev,\n              category: response.data.category\n            }));\n          }\n        } catch (error) {\n          console.error('Prediction failed:', error);\n        } finally {\n          setIsPredicting(false);\n        }\n      }, 500);\n    }\n    return () => clearTimeout(timerRef.current);\n  }, [formData.description, formData.amount, isOpen, isPredicting]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (name === 'type') {\n      const newCategories = value === 'income' ? incomeCategories : categories;\n      setFormData(prev => ({\n        ...prev,\n        category: newCategories.length > 0 ? newCategories[0] : ''\n      }));\n    }\n  };\n  const handleSuggestionSelect = category => {\n    setFormData(prev => ({\n      ...prev,\n      category\n    }));\n    setAiSuggestions(prev => prev.map(suggestion => ({\n      ...suggestion,\n      isSelected: suggestion.name === category\n    })));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const transactionData = {\n      ...formData,\n      amount: parseFloat(formData.amount),\n      date: formData.date || new Date().toISOString().split('T')[0]\n    };\n    onSubmit(transactionData);\n  };\n  const currentCategories = formData.type === 'income' ? incomeCategories : categories;\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-modal-overlay\",\n    onClick: () => !isSubmitting && onClose(),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: initialData ? 'Edit Transaction' : 'Add Transaction'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => !isSubmitting && onClose(),\n          disabled: isSubmitting,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Transaction Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"radio-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"type\",\n                  value: \"expense\",\n                  checked: formData.type === 'expense',\n                  onChange: handleChange,\n                  disabled: isSubmitting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-custom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this), \"Expense\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"type\",\n                  value: \"income\",\n                  checked: formData.type === 'income',\n                  onChange: handleChange,\n                  disabled: isSubmitting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-custom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this), \"Income\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"amount\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"amount\",\n              name: \"amount\",\n              value: formData.amount,\n              onChange: handleChange,\n              step: \"0.01\",\n              min: \"0\",\n              required: true,\n              disabled: isSubmitting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description-with-ai\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"description\",\n                name: \"description\",\n                value: formData.description,\n                onChange: handleChange,\n                required: true,\n                disabled: isSubmitting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), isPredicting && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ai-loading\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faMagic,\n                  spin: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), aiSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-suggestions\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"AI Suggestions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestion-buttons\",\n              children: aiSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `suggestion ${suggestion.isSelected ? 'selected' : ''}`,\n                onClick: () => handleSuggestionSelect(suggestion.name),\n                children: [suggestion.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"confidence-badge\",\n                  children: [Math.round(suggestion.confidence * 100), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this), suggestion.isSelected && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCheckCircle,\n                  className: \"selected-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"category\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"category\",\n              name: \"category\",\n              value: formData.category,\n              onChange: handleChange,\n              required: true,\n              disabled: isSubmitting,\n              children: currentCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category,\n                children: category.charAt(0).toUpperCase() + category.slice(1)\n              }, category, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"date\",\n              name: \"date\",\n              value: formData.date,\n              onChange: handleChange,\n              required: true,\n              disabled: isSubmitting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => !isSubmitting && onClose(),\n              className: \"btn btn-secondary\",\n              disabled: isSubmitting,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: isSubmitting,\n              children: isSubmitting ? 'Processing...' : initialData ? 'Update' : 'Add'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionForm, \"3P8urF/N9bwQuDz+inKDabeFzfg=\");\n_c = TransactionForm;\nexport default TransactionForm;\nvar _c;\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FontAwesomeIcon","faTimes","faMagic","faCheckCircle","axios","jsxDEV","_jsxDEV","TransactionForm","isOpen","onClose","onSubmit","initialData","isSubmitting","error","categories","incomeCategories","_s","formData","setFormData","type","amount","description","category","length","date","Date","toISOString","split","aiSuggestions","setAiSuggestions","isPredicting","setIsPredicting","timerRef","formDataRef","current","_initialData$date","newData","toString","prevDesc","prevAmt","shouldFetch","clearTimeout","setTimeout","response","post","name","data","confidence","isSelected","alternatives","map","alt","score","prev","console","handleChange","e","value","target","newCategories","handleSuggestionSelect","suggestion","handleSubmit","preventDefault","transactionData","parseFloat","currentCategories","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","disabled","icon","checked","onChange","htmlFor","id","step","min","required","spin","index","Math","round","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["C:/Users/pmwen/OneDrive/Desktop/budgeting-app/budgeting-app-frontend/src/components/dashboard/TransactionForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faMagic, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport './TransactionForm.css';\r\n\r\nconst TransactionForm = ({ \r\n  isOpen, \r\n  onClose, \r\n  onSubmit, \r\n  initialData = null, \r\n  isSubmitting = false,\r\n  error = '',\r\n  categories = [],\r\n  incomeCategories = []\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    type: 'expense',\r\n    amount: '',\r\n    description: '',\r\n    category: categories.length > 0 ? categories[0] : '',\r\n    date: new Date().toISOString().split('T')[0]\r\n  });\r\n\r\n  const [aiSuggestions, setAiSuggestions] = useState([]);\r\n  const [isPredicting, setIsPredicting] = useState(false);\r\n  const timerRef = useRef(null);\r\n  const formDataRef = useRef(formData);\r\n\r\n  // Sync ref with formData\r\n  useEffect(() => {\r\n    formDataRef.current = formData;\r\n  }, [formData]);\r\n\r\n  // Reset form when opening or when initialData changes\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      const newData = initialData ? {\r\n        type: initialData.type,\r\n        amount: initialData.amount.toString(),\r\n        description: initialData.description,\r\n        category: initialData.category,\r\n        date: initialData.date?.split('T')[0] || new Date().toISOString().split('T')[0]\r\n      } : {\r\n        type: 'expense',\r\n        amount: '',\r\n        description: '',\r\n        category: categories.length > 0 ? categories[0] : '',\r\n        date: new Date().toISOString().split('T')[0]\r\n      };\r\n      \r\n      setFormData(newData);\r\n      setAiSuggestions([]);\r\n    }\r\n  }, [isOpen, initialData, categories]);\r\n\r\n  // Handle AI suggestions without infinite loops\r\n  useEffect(() => {\r\n    if (!isOpen || isPredicting) return;\r\n\r\n    const { description, amount } = formData;\r\n    const { description: prevDesc, amount: prevAmt } = formDataRef.current;\r\n\r\n    const shouldFetch = description.length > 3 && \r\n                       amount && \r\n                       (description !== prevDesc || amount !== prevAmt);\r\n\r\n    if (shouldFetch) {\r\n      clearTimeout(timerRef.current);\r\n      timerRef.current = setTimeout(async () => {\r\n        setIsPredicting(true);\r\n        try {\r\n          const response = await axios.post(\r\n            'http://localhost:8000/api/predict-category/',\r\n            {\r\n              description: formData.description,\r\n              amount: formData.amount,\r\n              date: formData.date\r\n            }\r\n          );\r\n          \r\n          setAiSuggestions([\r\n            { \r\n              name: response.data.category, \r\n              confidence: response.data.confidence,\r\n              isSelected: false \r\n            },\r\n            ...response.data.alternatives.map(alt => ({\r\n              name: alt.category,\r\n              confidence: alt.score,\r\n              isSelected: false\r\n            }))\r\n          ]);\r\n\r\n          if (response.data.confidence > 0.7) {\r\n            setFormData(prev => ({\r\n              ...prev,\r\n              category: response.data.category\r\n            }));\r\n          }\r\n        } catch (error) {\r\n          console.error('Prediction failed:', error);\r\n        } finally {\r\n          setIsPredicting(false);\r\n        }\r\n      }, 500);\r\n    }\r\n\r\n    return () => clearTimeout(timerRef.current);\r\n  }, [formData.description, formData.amount, isOpen, isPredicting]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    \r\n    if (name === 'type') {\r\n      const newCategories = value === 'income' ? incomeCategories : categories;\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        category: newCategories.length > 0 ? newCategories[0] : ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSuggestionSelect = (category) => {\r\n    setFormData(prev => ({ ...prev, category }));\r\n    setAiSuggestions(prev => \r\n      prev.map(suggestion => ({\r\n        ...suggestion,\r\n        isSelected: suggestion.name === category\r\n      }))\r\n    );\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const transactionData = {\r\n      ...formData,\r\n      amount: parseFloat(formData.amount),\r\n      date: formData.date || new Date().toISOString().split('T')[0]\r\n    };\r\n    onSubmit(transactionData);\r\n  };\r\n\r\n  const currentCategories = formData.type === 'income' ? incomeCategories : categories;\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"transaction-modal-overlay\" onClick={() => !isSubmitting && onClose()}>\r\n      <div className=\"transaction-modal\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h2>{initialData ? 'Edit Transaction' : 'Add Transaction'}</h2>\r\n          <button \r\n            className=\"close-btn\" \r\n            onClick={() => !isSubmitting && onClose()} \r\n            disabled={isSubmitting}\r\n          >\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"modal-content\">\r\n          {error && <div className=\"form-error\">{error}</div>}\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Transaction Type</label>\r\n              <div className=\"radio-group\">\r\n                <label className=\"radio-label\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"type\"\r\n                    value=\"expense\"\r\n                    checked={formData.type === 'expense'}\r\n                    onChange={handleChange}\r\n                    disabled={isSubmitting}\r\n                  />\r\n                  <span className=\"radio-custom\"></span>\r\n                  Expense\r\n                </label>\r\n                <label className=\"radio-label\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"type\"\r\n                    value=\"income\"\r\n                    checked={formData.type === 'income'}\r\n                    onChange={handleChange}\r\n                    disabled={isSubmitting}\r\n                  />\r\n                  <span className=\"radio-custom\"></span>\r\n                  Income\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"amount\">Amount</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"amount\"\r\n                name=\"amount\"\r\n                value={formData.amount}\r\n                onChange={handleChange}\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                required\r\n                disabled={isSubmitting}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <div className=\"description-with-ai\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  value={formData.description}\r\n                  onChange={handleChange}\r\n                  required\r\n                  disabled={isSubmitting}\r\n                />\r\n                {isPredicting && (\r\n                  <span className=\"ai-loading\">\r\n                    <FontAwesomeIcon icon={faMagic} spin />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {aiSuggestions.length > 0 && (\r\n              <div className=\"ai-suggestions\">\r\n                <label>AI Suggestions</label>\r\n                <div className=\"suggestion-buttons\">\r\n                  {aiSuggestions.map((suggestion, index) => (\r\n                    <button\r\n                      type=\"button\"\r\n                      key={index}\r\n                      className={`suggestion ${suggestion.isSelected ? 'selected' : ''}`}\r\n                      onClick={() => handleSuggestionSelect(suggestion.name)}\r\n                    >\r\n                      {suggestion.name}\r\n                      <span className=\"confidence-badge\">\r\n                        {Math.round(suggestion.confidence * 100)}%\r\n                      </span>\r\n                      {suggestion.isSelected && (\r\n                        <FontAwesomeIcon icon={faCheckCircle} className=\"selected-icon\" />\r\n                      )}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"category\">Category</label>\r\n              <select\r\n                id=\"category\"\r\n                name=\"category\"\r\n                value={formData.category}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={isSubmitting}\r\n              >\r\n                {currentCategories.map(category => (\r\n                  <option key={category} value={category}>\r\n                    {category.charAt(0).toUpperCase() + category.slice(1)}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"date\">Date</label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"date\"\r\n                name=\"date\"\r\n                value={formData.date}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={isSubmitting}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-actions\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => !isSubmitting && onClose()}\r\n                className=\"btn btn-secondary\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                disabled={isSubmitting}\r\n              >\r\n                {isSubmitting ? 'Processing...' : initialData ? 'Update' : 'Add'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}