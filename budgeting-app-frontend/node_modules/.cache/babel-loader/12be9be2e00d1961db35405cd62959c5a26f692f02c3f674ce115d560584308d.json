{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pmwen\\\\OneDrive\\\\Desktop\\\\budgeting-app\\\\budgeting-app-frontend\\\\src\\\\components\\\\dashboard\\\\TransactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faMagic, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport './TransactionForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionForm = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  initialData = null,\n  isSubmitting = false,\n  error = '',\n  categories = [],\n  incomeCategories = []\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    type: 'expense',\n    amount: '',\n    description: '',\n    category: categories.length > 0 ? categories[0] : '',\n    date: new Date().toISOString().split('T')[0]\n  });\n\n  // AI Suggestions State\n  const [aiSuggestions, setAiSuggestions] = useState([]);\n  const [isPredicting, setIsPredicting] = useState(false);\n  const [lastPrediction, setLastPrediction] = useState(null);\n\n  // Reset form when opening/closing or when initialData changes\n  useEffect(() => {\n    if (isOpen) {\n      if (initialData) {\n        var _initialData$date;\n        setFormData({\n          type: initialData.type,\n          amount: initialData.amount.toString(),\n          description: initialData.description,\n          category: initialData.category,\n          date: ((_initialData$date = initialData.date) === null || _initialData$date === void 0 ? void 0 : _initialData$date.split('T')[0]) || new Date().toISOString().split('T')[0]\n        });\n        setAiSuggestions([]);\n      } else {\n        setFormData({\n          type: 'expense',\n          amount: '',\n          description: '',\n          category: categories.length > 0 ? categories[0] : '',\n          date: new Date().toISOString().split('T')[0]\n        });\n      }\n    }\n  }, [isOpen, initialData, categories]);\n\n  // Memoized fetch function to prevent recreation on every render\n  const fetchCategorySuggestions = useCallback(async () => {\n    if (!formData.description || isPredicting) return;\n    setIsPredicting(true);\n    try {\n      const response = await axios.post('http://localhost:8000/api/predict-category/', {\n        description: formData.description,\n        amount: formData.amount,\n        date: formData.date\n      });\n      setAiSuggestions(prev => [{\n        name: response.data.category,\n        confidence: response.data.confidence,\n        isSelected: false\n      }, ...response.data.alternatives.map(alt => ({\n        name: alt.category,\n        confidence: alt.score,\n        isSelected: false\n      }))]);\n\n      // Auto-select if high confidence using functional update\n      if (response.data.confidence > 0.7) {\n        setFormData(prev => ({\n          ...prev,\n          category: response.data.category\n        }));\n      }\n      setLastPrediction(response.data.category);\n    } catch (error) {\n      console.error('Prediction failed:', error);\n    } finally {\n      setIsPredicting(false);\n    }\n  }, [formData.description, formData.amount, formData.date, isPredicting]);\n\n  // Debounced effect for AI suggestions\n  useEffect(() => {\n    if (formData.description.length > 3 && formData.amount) {\n      const timer = setTimeout(() => {\n        fetchCategorySuggestions();\n      }, 500); // Debounce 500ms\n\n      return () => clearTimeout(timer);\n    }\n  }, [formData.description, formData.amount, fetchCategorySuggestions]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Reset category when type changes\n    if (name === 'type') {\n      const newCategories = value === 'income' ? incomeCategories : categories;\n      setFormData(prev => ({\n        ...prev,\n        category: newCategories.length > 0 ? newCategories[0] : ''\n      }));\n    }\n  };\n  const handleSuggestionSelect = category => {\n    setFormData(prev => ({\n      ...prev,\n      category\n    }));\n    setAiSuggestions(prev => prev.map(suggestion => ({\n      ...suggestion,\n      isSelected: suggestion.name === category\n    })));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const transactionData = {\n      ...formData,\n      amount: parseFloat(formData.amount),\n      date: formData.date || new Date().toISOString().split('T')[0]\n    };\n    onSubmit(transactionData);\n  };\n  const currentCategories = formData.type === 'income' ? incomeCategories : categories;\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: () => !isSubmitting && onClose(),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: initialData ? 'Edit Transaction' : 'Add Transaction'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => !isSubmitting && onClose(),\n          disabled: isSubmitting,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Transaction Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"radio-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"type\",\n                  value: \"expense\",\n                  checked: formData.type === 'expense',\n                  onChange: handleChange,\n                  disabled: isSubmitting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-custom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this), \"Expense\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"type\",\n                  value: \"income\",\n                  checked: formData.type === 'income',\n                  onChange: handleChange,\n                  disabled: isSubmitting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-custom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this), \"Income\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"amount\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"amount\",\n              name: \"amount\",\n              value: formData.amount,\n              onChange: handleChange,\n              step: \"0.01\",\n              min: \"0\",\n              required: true,\n              disabled: isSubmitting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description-with-ai\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"description\",\n                name: \"description\",\n                value: formData.description,\n                onChange: handleChange,\n                required: true,\n                disabled: isSubmitting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), isPredicting && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ai-loading\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faMagic,\n                  spin: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), aiSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-suggestions\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"AI Suggestions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestion-buttons\",\n              children: aiSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `suggestion ${suggestion.isSelected ? 'selected' : ''}`,\n                onClick: () => handleSuggestionSelect(suggestion.name),\n                children: [suggestion.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"confidence-badge\",\n                  children: [Math.round(suggestion.confidence * 100), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 23\n                }, this), suggestion.isSelected && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCheckCircle,\n                  className: \"selected-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"category\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"category\",\n              name: \"category\",\n              value: formData.category,\n              onChange: handleChange,\n              required: true,\n              disabled: isSubmitting,\n              children: currentCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category,\n                children: category.charAt(0).toUpperCase() + category.slice(1)\n              }, category, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"date\",\n              name: \"date\",\n              value: formData.date,\n              onChange: handleChange,\n              required: true,\n              disabled: isSubmitting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => !isSubmitting && onClose(),\n              className: \"btn btn-secondary\",\n              disabled: isSubmitting,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: isSubmitting,\n              children: isSubmitting ? 'Processing...' : initialData ? 'Update' : 'Add'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionForm, \"dfEdqbUGe9asqJrDDXfk0IbFIKE=\");\n_c = TransactionForm;\nexport default TransactionForm;\nvar _c;\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","FontAwesomeIcon","faTimes","faMagic","faCheckCircle","axios","jsxDEV","_jsxDEV","TransactionForm","isOpen","onClose","onSubmit","initialData","isSubmitting","error","categories","incomeCategories","_s","formData","setFormData","type","amount","description","category","length","date","Date","toISOString","split","aiSuggestions","setAiSuggestions","isPredicting","setIsPredicting","lastPrediction","setLastPrediction","_initialData$date","toString","fetchCategorySuggestions","response","post","prev","name","data","confidence","isSelected","alternatives","map","alt","score","console","timer","setTimeout","clearTimeout","handleChange","e","value","target","newCategories","handleSuggestionSelect","suggestion","handleSubmit","preventDefault","transactionData","parseFloat","currentCategories","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","disabled","icon","checked","onChange","htmlFor","id","step","min","required","spin","index","Math","round","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["C:/Users/pmwen/OneDrive/Desktop/budgeting-app/budgeting-app-frontend/src/components/dashboard/TransactionForm.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faMagic, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport './TransactionForm.css';\r\n\r\nconst TransactionForm = ({ \r\n  isOpen, \r\n  onClose, \r\n  onSubmit, \r\n  initialData = null, \r\n  isSubmitting = false,\r\n  error = '',\r\n  categories = [],\r\n  incomeCategories = []\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    type: 'expense',\r\n    amount: '',\r\n    description: '',\r\n    category: categories.length > 0 ? categories[0] : '',\r\n    date: new Date().toISOString().split('T')[0]\r\n  });\r\n\r\n  // AI Suggestions State\r\n  const [aiSuggestions, setAiSuggestions] = useState([]);\r\n  const [isPredicting, setIsPredicting] = useState(false);\r\n  const [lastPrediction, setLastPrediction] = useState(null);\r\n\r\n  // Reset form when opening/closing or when initialData changes\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      if (initialData) {\r\n        setFormData({\r\n          type: initialData.type,\r\n          amount: initialData.amount.toString(),\r\n          description: initialData.description,\r\n          category: initialData.category,\r\n          date: initialData.date?.split('T')[0] || new Date().toISOString().split('T')[0]\r\n        });\r\n        setAiSuggestions([]);\r\n      } else {\r\n        setFormData({\r\n          type: 'expense',\r\n          amount: '',\r\n          description: '',\r\n          category: categories.length > 0 ? categories[0] : '',\r\n          date: new Date().toISOString().split('T')[0]\r\n        });\r\n      }\r\n    }\r\n  }, [isOpen, initialData, categories]);\r\n\r\n  // Memoized fetch function to prevent recreation on every render\r\n  const fetchCategorySuggestions = useCallback(async () => {\r\n    if (!formData.description || isPredicting) return;\r\n    \r\n    setIsPredicting(true);\r\n    try {\r\n      const response = await axios.post(\r\n        'http://localhost:8000/api/predict-category/',\r\n        {\r\n          description: formData.description,\r\n          amount: formData.amount,\r\n          date: formData.date\r\n        }\r\n      );\r\n      \r\n      setAiSuggestions(prev => [\r\n        { \r\n          name: response.data.category, \r\n          confidence: response.data.confidence,\r\n          isSelected: false \r\n        },\r\n        ...response.data.alternatives.map(alt => ({\r\n          name: alt.category,\r\n          confidence: alt.score,\r\n          isSelected: false\r\n        }))\r\n      ]);\r\n\r\n      // Auto-select if high confidence using functional update\r\n      if (response.data.confidence > 0.7) {\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          category: response.data.category\r\n        }));\r\n      }\r\n\r\n      setLastPrediction(response.data.category);\r\n    } catch (error) {\r\n      console.error('Prediction failed:', error);\r\n    } finally {\r\n      setIsPredicting(false);\r\n    }\r\n  }, [formData.description, formData.amount, formData.date, isPredicting]);\r\n\r\n  // Debounced effect for AI suggestions\r\n  useEffect(() => {\r\n    if (formData.description.length > 3 && formData.amount) {\r\n      const timer = setTimeout(() => {\r\n        fetchCategorySuggestions();\r\n      }, 500); // Debounce 500ms\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [formData.description, formData.amount, fetchCategorySuggestions]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    \r\n    // Reset category when type changes\r\n    if (name === 'type') {\r\n      const newCategories = value === 'income' ? incomeCategories : categories;\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        category: newCategories.length > 0 ? newCategories[0] : ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSuggestionSelect = (category) => {\r\n    setFormData(prev => ({ ...prev, category }));\r\n    setAiSuggestions(prev => \r\n      prev.map(suggestion => ({\r\n        ...suggestion,\r\n        isSelected: suggestion.name === category\r\n      }))\r\n    );\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const transactionData = {\r\n      ...formData,\r\n      amount: parseFloat(formData.amount),\r\n      date: formData.date || new Date().toISOString().split('T')[0]\r\n    };\r\n    onSubmit(transactionData);\r\n  };\r\n\r\n  const currentCategories = formData.type === 'income' ? incomeCategories : categories;\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={() => !isSubmitting && onClose()}>\r\n      <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h2>{initialData ? 'Edit Transaction' : 'Add Transaction'}</h2>\r\n          <button \r\n            className=\"close-btn\" \r\n            onClick={() => !isSubmitting && onClose()} \r\n            disabled={isSubmitting}\r\n          >\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-content\">\r\n          {error && <div className=\"form-error\">{error}</div>}\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Transaction Type</label>\r\n              <div className=\"radio-group\">\r\n                <label className=\"radio-label\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"type\"\r\n                    value=\"expense\"\r\n                    checked={formData.type === 'expense'}\r\n                    onChange={handleChange}\r\n                    disabled={isSubmitting}\r\n                  />\r\n                  <span className=\"radio-custom\"></span>\r\n                  Expense\r\n                </label>\r\n                <label className=\"radio-label\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"type\"\r\n                    value=\"income\"\r\n                    checked={formData.type === 'income'}\r\n                    onChange={handleChange}\r\n                    disabled={isSubmitting}\r\n                  />\r\n                  <span className=\"radio-custom\"></span>\r\n                  Income\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"amount\">Amount</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"amount\"\r\n                name=\"amount\"\r\n                value={formData.amount}\r\n                onChange={handleChange}\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                required\r\n                disabled={isSubmitting}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <div className=\"description-with-ai\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  value={formData.description}\r\n                  onChange={handleChange}\r\n                  required\r\n                  disabled={isSubmitting}\r\n                />\r\n                {isPredicting && (\r\n                  <span className=\"ai-loading\">\r\n                    <FontAwesomeIcon icon={faMagic} spin />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* AI Suggestions */}\r\n            {aiSuggestions.length > 0 && (\r\n              <div className=\"ai-suggestions\">\r\n                <label>AI Suggestions</label>\r\n                <div className=\"suggestion-buttons\">\r\n                  {aiSuggestions.map((suggestion, index) => (\r\n                    <button\r\n                      type=\"button\"\r\n                      key={index}\r\n                      className={`suggestion ${suggestion.isSelected ? 'selected' : ''}`}\r\n                      onClick={() => handleSuggestionSelect(suggestion.name)}\r\n                    >\r\n                      {suggestion.name}\r\n                      <span className=\"confidence-badge\">\r\n                        {Math.round(suggestion.confidence * 100)}%\r\n                      </span>\r\n                      {suggestion.isSelected && (\r\n                        <FontAwesomeIcon icon={faCheckCircle} className=\"selected-icon\" />\r\n                      )}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"category\">Category</label>\r\n              <select\r\n                id=\"category\"\r\n                name=\"category\"\r\n                value={formData.category}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={isSubmitting}\r\n              >\r\n                {currentCategories.map(category => (\r\n                  <option key={category} value={category}>\r\n                    {category.charAt(0).toUpperCase() + category.slice(1)}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"date\">Date</label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"date\"\r\n                name=\"date\"\r\n                value={formData.date}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={isSubmitting}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-actions\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => !isSubmitting && onClose()}\r\n                className=\"btn btn-secondary\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                disabled={isSubmitting}\r\n              >\r\n                {isSubmitting ? 'Processing...' : initialData ? 'Update' : 'Add'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}