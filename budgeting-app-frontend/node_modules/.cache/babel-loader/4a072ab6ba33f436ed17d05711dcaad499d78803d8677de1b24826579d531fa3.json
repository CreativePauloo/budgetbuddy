{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pmwen\\\\OneDrive\\\\Desktop\\\\budgeting-app\\\\budgeting-app-frontend\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faFilePdf } from '@fortawesome/free-solid-svg-icons';\nimport Sidebar from './Sidebar';\nimport SummaryCards from './SummaryCards';\nimport ChartsSection from './ChartsSection';\nimport TransactionsTable from './TransactionsTable';\nimport TransactionForm from './TransactionForm';\nimport BudgetSummary from './BudgetSummary';\nimport ProfileSection from './ProfileSection';\nimport NotificationsList from './NotificationsList';\nimport Chatbot from '../common/Chatbot';\nimport { formatMoney } from '../common/helpers';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [activeMenu, setActiveMenu] = useState('dashboard');\n  const [dashboardData, setDashboardData] = useState(null);\n  const [user, setUser] = useState(null);\n  const [notifications, setNotifications] = useState([]);\n  const [expenseCategories, setExpenseCategories] = useState([]);\n  const [expenseTransactions, setExpenseTransactions] = useState([]);\n  const [budgets, setBudgets] = useState([]);\n  const [monthlyTrends, setMonthlyTrends] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [showTransactionForm, setShowTransactionForm] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n      try {\n        const [dashboardRes, userRes, notificationsRes, budgetsRes, monthlyRes] = await Promise.all([axios.get('http://localhost:8000/api/dashboard/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get('http://localhost:8000/api/user/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get('http://localhost:8000/api/notifications/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).catch(() => ({\n          data: []\n        })), axios.get('http://localhost:8000/api/budgets/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).catch(() => ({\n          data: []\n        })), axios.get('http://localhost:8000/api/transactions/monthly/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).catch(() => ({\n          data: []\n        }))]);\n        setDashboardData(dashboardRes.data);\n        setUser(userRes.data);\n        setNotifications(notificationsRes.data);\n        setBudgets(budgetsRes.data);\n        if (dashboardRes.data.recent_transactions) {\n          const expenses = dashboardRes.data.recent_transactions.filter(t => t.type === 'expense');\n          setExpenseTransactions(expenses);\n          const categoryTotals = {};\n          expenses.forEach(expense => {\n            if (!categoryTotals[expense.category]) {\n              categoryTotals[expense.category] = 0;\n            }\n            categoryTotals[expense.category] += Number(expense.amount);\n          });\n          setExpenseCategories(Object.entries(categoryTotals).map(([name, amount]) => ({\n            name,\n            amount,\n            icon: getCategoryIcon(name)\n          })));\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        localStorage.removeItem('access_token');\n        navigate('/login');\n      }\n    };\n    fetchDashboardData();\n  }, [navigate]);\n  const getCategoryIcon = category => {\n    const icons = {\n      food: 'utensils',\n      transportation: 'car',\n      housing: 'home',\n      entertainment: 'film',\n      utilities: 'lightbulb',\n      health: 'heartbeat',\n      education: 'book',\n      other: 'shapes'\n    };\n    return icons[category] || 'shapes';\n  };\n  const handleAddTransaction = async transaction => {\n    const token = localStorage.getItem('access_token');\n    try {\n      await axios.post('http://localhost:8000/api/transactions/', transaction, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      await refreshData();\n    } catch (error) {\n      console.error('Error adding transaction:', error);\n      throw error;\n    }\n  };\n  const refreshData = async () => {\n    const token = localStorage.getItem('access_token');\n    try {\n      const [dashboardRes] = await Promise.all([axios.get('http://localhost:8000/api/dashboard/', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]);\n      setDashboardData(dashboardRes.data);\n    } catch (error) {\n      console.error('Error refreshing data:', error);\n    }\n  };\n  if (!dashboardData || !user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      activeMenu: activeMenu,\n      setActiveMenu: setActiveMenu,\n      notifications: notifications\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: activeMenu.charAt(0).toUpperCase() + activeMenu.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: activeMenu === 'transactions' && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => setShowTransactionForm(true),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), \" Add Transaction\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), activeMenu === 'dashboard' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SummaryCards, {\n          income: dashboardData.income,\n          expenses: dashboardData.expenses,\n          savings: dashboardData.income - dashboardData.expenses,\n          savings_goal: dashboardData.savings_goal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChartsSection, {\n          monthlyTrends: monthlyTrends,\n          expenseCategories: expenseCategories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TransactionsTable, {\n          transactions: dashboardData.recent_transactions,\n          title: \"Recent Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), activeMenu === 'transactions' && /*#__PURE__*/_jsxDEV(TransactionsTable, {\n        transactions: expenseTransactions,\n        title: \"All Transactions\",\n        showFilters: true,\n        searchTerm: searchTerm,\n        setSearchTerm: setSearchTerm,\n        selectedCategory: selectedCategory,\n        setSelectedCategory: setSelectedCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), activeMenu === 'budgets' && /*#__PURE__*/_jsxDEV(BudgetSummary, {\n        budgets: budgets,\n        expenseCategories: expenseCategories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), activeMenu === 'profile' && /*#__PURE__*/_jsxDEV(ProfileSection, {\n        user: user,\n        setUser: setUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), activeMenu === 'notifications' && /*#__PURE__*/_jsxDEV(NotificationsList, {\n        notifications: notifications\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chatbot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), showTransactionForm && /*#__PURE__*/_jsxDEV(TransactionForm, {\n      onClose: () => setShowTransactionForm(false),\n      onSubmit: handleAddTransaction,\n      userId: user.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"cfCWreECV5xjEZ5DlBrYvnIs0cs=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","FontAwesomeIcon","faPlus","faFilePdf","Sidebar","SummaryCards","ChartsSection","TransactionsTable","TransactionForm","BudgetSummary","ProfileSection","NotificationsList","Chatbot","formatMoney","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","activeMenu","setActiveMenu","dashboardData","setDashboardData","user","setUser","notifications","setNotifications","expenseCategories","setExpenseCategories","expenseTransactions","setExpenseTransactions","budgets","setBudgets","monthlyTrends","setMonthlyTrends","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","showTransactionForm","setShowTransactionForm","navigate","fetchDashboardData","token","localStorage","getItem","dashboardRes","userRes","notificationsRes","budgetsRes","monthlyRes","Promise","all","get","headers","Authorization","catch","data","recent_transactions","expenses","filter","t","type","categoryTotals","forEach","expense","category","Number","amount","Object","entries","map","name","icon","getCategoryIcon","error","console","removeItem","icons","food","transportation","housing","entertainment","utilities","health","education","other","handleAddTransaction","transaction","post","refreshData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","onClick","income","savings","savings_goal","transactions","title","showFilters","onClose","onSubmit","userId","id","_c","$RefreshReg$"],"sources":["C:/Users/pmwen/OneDrive/Desktop/budgeting-app/budgeting-app-frontend/src/components/dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faFilePdf } from '@fortawesome/free-solid-svg-icons';\r\nimport Sidebar from './Sidebar';\r\nimport SummaryCards from './SummaryCards';\r\nimport ChartsSection from './ChartsSection';\r\nimport TransactionsTable from './TransactionsTable';\r\nimport TransactionForm from './TransactionForm';\r\nimport BudgetSummary from './BudgetSummary';\r\nimport ProfileSection from './ProfileSection';\r\nimport NotificationsList from './NotificationsList';\r\nimport Chatbot from '../common/Chatbot';\r\nimport { formatMoney } from '../common/helpers';\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  const [activeMenu, setActiveMenu] = useState('dashboard');\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [expenseCategories, setExpenseCategories] = useState([]);\r\n  const [expenseTransactions, setExpenseTransactions] = useState([]);\r\n  const [budgets, setBudgets] = useState([]);\r\n  const [monthlyTrends, setMonthlyTrends] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [showTransactionForm, setShowTransactionForm] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      const token = localStorage.getItem('access_token');\r\n      if (!token) {\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const [dashboardRes, userRes, notificationsRes, budgetsRes, monthlyRes] = await Promise.all([\r\n          axios.get('http://localhost:8000/api/dashboard/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }),\r\n          axios.get('http://localhost:8000/api/user/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }),\r\n          axios.get('http://localhost:8000/api/notifications/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }).catch(() => ({ data: [] })),\r\n          axios.get('http://localhost:8000/api/budgets/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }).catch(() => ({ data: [] })),\r\n          axios.get('http://localhost:8000/api/transactions/monthly/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }).catch(() => ({ data: [] }))\r\n        ]);\r\n\r\n        setDashboardData(dashboardRes.data);\r\n        setUser(userRes.data);\r\n        setNotifications(notificationsRes.data);\r\n        setBudgets(budgetsRes.data);\r\n        \r\n        if (dashboardRes.data.recent_transactions) {\r\n          const expenses = dashboardRes.data.recent_transactions.filter(t => t.type === 'expense');\r\n          setExpenseTransactions(expenses);\r\n          \r\n          const categoryTotals = {};\r\n          expenses.forEach(expense => {\r\n            if (!categoryTotals[expense.category]) {\r\n              categoryTotals[expense.category] = 0;\r\n            }\r\n            categoryTotals[expense.category] += Number(expense.amount);\r\n          });\r\n          \r\n          setExpenseCategories(Object.entries(categoryTotals).map(([name, amount]) => ({\r\n            name,\r\n            amount,\r\n            icon: getCategoryIcon(name)\r\n          })));\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        localStorage.removeItem('access_token');\r\n        navigate('/login');\r\n      }\r\n    };\r\n\r\n    fetchDashboardData();\r\n  }, [navigate]);\r\n\r\n  const getCategoryIcon = (category) => {\r\n    const icons = {\r\n      food: 'utensils',\r\n      transportation: 'car',\r\n      housing: 'home',\r\n      entertainment: 'film',\r\n      utilities: 'lightbulb',\r\n      health: 'heartbeat',\r\n      education: 'book',\r\n      other: 'shapes'\r\n    };\r\n    return icons[category] || 'shapes';\r\n  };\r\n\r\n  const handleAddTransaction = async (transaction) => {\r\n    const token = localStorage.getItem('access_token');\r\n    try {\r\n      await axios.post(\r\n        'http://localhost:8000/api/transactions/',\r\n        transaction,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      await refreshData();\r\n    } catch (error) {\r\n      console.error('Error adding transaction:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const refreshData = async () => {\r\n    const token = localStorage.getItem('access_token');\r\n    try {\r\n      const [dashboardRes] = await Promise.all([\r\n        axios.get('http://localhost:8000/api/dashboard/', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n      ]);\r\n      setDashboardData(dashboardRes.data);\r\n    } catch (error) {\r\n      console.error('Error refreshing data:', error);\r\n    }\r\n  };\r\n\r\n  if (!dashboardData || !user) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <Sidebar \r\n        activeMenu={activeMenu} \r\n        setActiveMenu={setActiveMenu} \r\n        notifications={notifications}\r\n      />\r\n\r\n      <div className=\"main-content\">\r\n        <div className=\"content-header\">\r\n          <h1>{activeMenu.charAt(0).toUpperCase() + activeMenu.slice(1)}</h1>\r\n          <div className=\"header-actions\">\r\n            {activeMenu === 'transactions' && (\r\n              <button \r\n                className=\"btn btn-primary\"\r\n                onClick={() => setShowTransactionForm(true)}\r\n              >\r\n                <FontAwesomeIcon icon={faPlus} /> Add Transaction\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {activeMenu === 'dashboard' && (\r\n          <>\r\n            <SummaryCards \r\n              income={dashboardData.income}\r\n              expenses={dashboardData.expenses}\r\n              savings={dashboardData.income - dashboardData.expenses}\r\n              savings_goal={dashboardData.savings_goal}\r\n            />\r\n            <ChartsSection \r\n              monthlyTrends={monthlyTrends}\r\n              expenseCategories={expenseCategories}\r\n            />\r\n            <TransactionsTable \r\n              transactions={dashboardData.recent_transactions}\r\n              title=\"Recent Transactions\"\r\n            />\r\n          </>\r\n        )}\r\n\r\n        {activeMenu === 'transactions' && (\r\n          <TransactionsTable \r\n            transactions={expenseTransactions}\r\n            title=\"All Transactions\"\r\n            showFilters={true}\r\n            searchTerm={searchTerm}\r\n            setSearchTerm={setSearchTerm}\r\n            selectedCategory={selectedCategory}\r\n            setSelectedCategory={setSelectedCategory}\r\n          />\r\n        )}\r\n\r\n        {activeMenu === 'budgets' && (\r\n          <BudgetSummary \r\n            budgets={budgets}\r\n            expenseCategories={expenseCategories}\r\n          />\r\n        )}\r\n\r\n        {activeMenu === 'profile' && (\r\n          <ProfileSection \r\n            user={user} \r\n            setUser={setUser}\r\n          />\r\n        )}\r\n\r\n        {activeMenu === 'notifications' && (\r\n          <NotificationsList \r\n            notifications={notifications}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <Chatbot />\r\n      \r\n      {showTransactionForm && (\r\n        <TransactionForm \r\n          onClose={() => setShowTransactionForm(false)}\r\n          onSubmit={handleAddTransaction}\r\n          userId={user.id}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}