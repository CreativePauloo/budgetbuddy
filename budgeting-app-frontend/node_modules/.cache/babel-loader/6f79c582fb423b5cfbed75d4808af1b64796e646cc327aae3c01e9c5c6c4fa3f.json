{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{useNavigate}from'react-router-dom';import axios from'axios';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPlus,faFilePdf,faSignOutAlt}from'@fortawesome/free-solid-svg-icons';import Sidebar from'./Sidebar';import SummaryCards from'./SummaryCards';import ChartsSection from'./ChartsSection';import TransactionsTable from'./TransactionsTable';import TransactionForm from'./TransactionForm';import BudgetForm from'./BudgetForm';import BudgetSummary from'./BudgetSummary';import ProfileSection from'./ProfileSection';import NotificationsList from'./NotificationsList';import Chatbot from'../common/Chatbot';import{formatMoney,getCategoryIcon,formatMonthlyData}from'../common/helpers';import'./Dashboard.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const API_BASE_URL=process.env.REACT_APP_API_BASE_URL||'https://budgetbuddy-backend-eq1x.onrender.com';const Dashboard=()=>{const[activeMenu,setActiveMenu]=useState('dashboard');const[dashboardData,setDashboardData]=useState(null);const[user,setUser]=useState(null);const[notifications,setNotifications]=useState([]);const[expenseCategories,setExpenseCategories]=useState([]);const[expenseTransactions,setExpenseTransactions]=useState([]);const[budgets,setBudgets]=useState([]);const[monthlyTrends,setMonthlyTrends]=useState(null);const[searchTerm,setSearchTerm]=useState('');const[selectedCategory,setSelectedCategory]=useState('all');const[showTransactionForm,setShowTransactionForm]=useState(false);const[showBudgetForm,setShowBudgetForm]=useState(false);const[isSubmitting,setIsSubmitting]=useState(false);const[formError,setFormError]=useState('');const[editingTransaction,setEditingTransaction]=useState(null);const[isDataLoading,setIsDataLoading]=useState(false);const navigate=useNavigate();const fetchDashboardData=useCallback(async()=>{const token=localStorage.getItem('access_token');if(!token){navigate('/login');return;}setIsDataLoading(true);try{const[dashboardRes,userRes,notificationsRes,budgetsRes,monthlyRes]=await Promise.all([axios.get(`${API_BASE_URL}/dashboard/`,{headers:{Authorization:`Bearer ${token}`}}),axios.get(`${API_BASE_URL}/user/`,{headers:{Authorization:`Bearer ${token}`}}),axios.get(`${API_BASE_URL}/notifications/`,{headers:{Authorization:`Bearer ${token}`}}).catch(()=>({data:[]})),axios.get(`${API_BASE_URL}/budgets/`,{headers:{Authorization:`Bearer ${token}`}}).catch(()=>({data:[]})),axios.get(`${API_BASE_URL}/transactions/monthly/`,{headers:{Authorization:`Bearer ${token}`}}).catch(()=>({data:[]}))]);const processedData={...dashboardRes.data,savings_goal:{...dashboardRes.data.savings_goal,current_amount:Number(dashboardRes.data.savings_goal.current_amount),target_amount:Number(dashboardRes.data.savings_goal.target_amount)}};setDashboardData(processedData);setUser(userRes.data);setNotifications(notificationsRes.data);setBudgets(budgetsRes.data);setMonthlyTrends(formatMonthlyData(monthlyRes.data));if(dashboardRes.data.recent_transactions){const expenses=dashboardRes.data.recent_transactions.filter(t=>t.type==='expense');setExpenseTransactions(expenses);const categoryTotals={};expenses.forEach(expense=>{if(!categoryTotals[expense.category]){categoryTotals[expense.category]=0;}categoryTotals[expense.category]+=Number(expense.amount);});setExpenseCategories(Object.entries(categoryTotals).map(_ref=>{let[name,amount]=_ref;return{name,amount,icon:getCategoryIcon(name)};}));}}catch(error){console.error('Error fetching data:',error);localStorage.removeItem('access_token');navigate('/login');}finally{setIsDataLoading(false);}},[navigate]);useEffect(()=>{fetchDashboardData();},[fetchDashboardData]);const handleLogout=()=>{if(window.confirm('Are you sure you want to log out?')){localStorage.removeItem('access_token');navigate('/login');}};const handleAddNewTransaction=useCallback(()=>{setEditingTransaction(null);setShowTransactionForm(true);},[]);const handleEditTransaction=useCallback(transaction=>{setEditingTransaction(transaction);setShowTransactionForm(true);},[]);const handleTransactionSubmit=useCallback(async transactionData=>{setIsSubmitting(true);setFormError('');try{const token=localStorage.getItem('access_token');if(editingTransaction){await axios.put(`${API_BASE_URL}/transactions/${editingTransaction.id}/`,transactionData,{headers:{Authorization:`Bearer ${token}`}});}else{await axios.post(`${API_BASE_URL}/transactions/`,transactionData,{headers:{Authorization:`Bearer ${token}`}});}await refreshData();setShowTransactionForm(false);setEditingTransaction(null);}catch(error){var _error$response,_error$response$data;console.error('Transaction error:',error);setFormError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||'Failed to save transaction');}finally{setIsSubmitting(false);}},[editingTransaction]);const markNotificationAsRead=useCallback(async id=>{const token=localStorage.getItem('access_token');try{await axios.patch(`${API_BASE_URL}/notifications/${id}/`,{is_read:true},{headers:{Authorization:`Bearer ${token}`}});setNotifications(prevNotifications=>prevNotifications.map(n=>n.id===id?{...n,is_read:true}:n));}catch(error){console.error('Error marking notification as read:',error);}},[]);const handleAddBudget=useCallback(async budget=>{const token=localStorage.getItem('access_token');try{await axios.post(`${API_BASE_URL}/budgets/`,budget,{headers:{Authorization:`Bearer ${token}`}});await refreshData();setShowBudgetForm(false);}catch(error){console.error('Error creating budget:',error);alert('Failed to create budget. Please try again.');}},[]);const handleDeleteTransaction=useCallback(async transactionId=>{const token=localStorage.getItem('access_token');try{await axios.delete(`${API_BASE_URL}/transactions/${transactionId}/`,{headers:{Authorization:`Bearer ${token}`}});await refreshData();}catch(error){var _error$response2,_error$response2$data;console.error('Error deleting transaction:',error);alert(`Failed to delete transaction. ${((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.detail)||'Please try again.'}`);}},[]);const refreshData=useCallback(async()=>{const token=localStorage.getItem('access_token');try{const[dashboardRes,monthlyRes,budgetsRes]=await Promise.all([axios.get(`${API_BASE_URL}/dashboard/`,{headers:{Authorization:`Bearer ${token}`}}),axios.get(`${API_BASE_URL}/transactions/monthly/`,{headers:{Authorization:`Bearer ${token}`}}),axios.get(`${API_BASE_URL}/budgets/`,{headers:{Authorization:`Bearer ${token}`}})]);setDashboardData(dashboardRes.data);setMonthlyTrends(formatMonthlyData(monthlyRes.data));setBudgets(budgetsRes.data);}catch(error){console.error('Error refreshing data:',error);}},[]);const generateReport=useCallback(async function(){let type=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'monthly';try{const response=await axios.get(`${API_BASE_URL}/reports/?type=${type}`,{headers:{Authorization:`Bearer ${localStorage.getItem('access_token')}`},responseType:'blob'});const url=window.URL.createObjectURL(new Blob([response.data]));const link=document.createElement('a');link.href=url;link.setAttribute('download',`budget_report_${new Date().toISOString().split('T')[0]}.pdf`);document.body.appendChild(link);link.click();link.remove();}catch(error){console.error('Error generating report:',error);alert('Failed to generate report');}},[]);if(!dashboardData||!user){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading...\"});}const{income,expenses,savings_goal,recent_transactions}=dashboardData;const savings=income-expenses;const progressPercentage=savings_goal.target_amount>0?savings_goal.current_amount/savings_goal.target_amount*100:0;return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsx(Sidebar,{activeMenu:activeMenu,setActiveMenu:setActiveMenu,notifications:notifications,handleLogout:handleLogout}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"content-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:activeMenu.charAt(0).toUpperCase()+activeMenu.slice(1)}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-actions\",children:[activeMenu==='transactions'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary\",onClick:handleAddNewTransaction,disabled:isSubmitting,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPlus}),isSubmitting?'Processing...':'Add Transaction']}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary\",onClick:()=>setShowBudgetForm(true),children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPlus}),\" Add Budget\"]})]}),activeMenu==='overview'&&/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-secondary\",onClick:()=>generateReport(),children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faFilePdf}),\" Generate Report\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-secondary\",onClick:handleLogout,title:\"Logout\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSignOutAlt}),\" Logout\"]})]})]}),activeMenu==='dashboard'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(SummaryCards,{income:income,expenses:expenses,savings:savings,savings_goal:savings_goal,progressPercentage:progressPercentage}),/*#__PURE__*/_jsx(ChartsSection,{income:income,expenses:expenses,monthlyTrends:monthlyTrends,expenseCategories:expenseCategories,budgets:budgets}),/*#__PURE__*/_jsx(TransactionsTable,{transactions:recent_transactions,title:\"Recent Transactions\",onDelete:handleDeleteTransaction,onEdit:handleEditTransaction})]}),activeMenu==='transactions'&&/*#__PURE__*/_jsx(TransactionsTable,{transactions:dashboardData.recent_transactions||[],title:\"Transactions\",showFilters:true,searchTerm:searchTerm,setSearchTerm:setSearchTerm,selectedCategory:selectedCategory,setSelectedCategory:setSelectedCategory,expenseCategories:expenseCategories,onDelete:handleDeleteTransaction,onEdit:handleEditTransaction,onAdd:handleAddNewTransaction}),activeMenu==='overview'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ChartsSection,{income:income,expenses:expenses,monthlyTrends:monthlyTrends,expenseCategories:expenseCategories,budgets:budgets,showBudgetChart:true}),/*#__PURE__*/_jsx(BudgetSummary,{budgets:budgets,expenseCategories:expenseCategories})]}),activeMenu==='profile'&&/*#__PURE__*/_jsx(ProfileSection,{user:user,setUser:setUser}),activeMenu==='notifications'&&/*#__PURE__*/_jsx(NotificationsList,{notifications:notifications,markNotificationAsRead:markNotificationAsRead})]}),/*#__PURE__*/_jsx(Chatbot,{}),showTransactionForm&&/*#__PURE__*/_jsx(TransactionForm,{isOpen:showTransactionForm,onClose:()=>{setShowTransactionForm(false);setEditingTransaction(null);},onSubmit:handleTransactionSubmit,initialData:editingTransaction,isSubmitting:isSubmitting,error:formError,categories:['food','transportation','housing','entertainment','utilities','health','education','other'],incomeCategories:['salary','freelance','investments','gifts','other-income']}),showBudgetForm&&/*#__PURE__*/_jsx(BudgetForm,{isOpen:showBudgetForm,onClose:()=>setShowBudgetForm(false),onBudgetAdded:handleAddBudget,expenseCategories:expenseCategories})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","axios","FontAwesomeIcon","faPlus","faFilePdf","faSignOutAlt","Sidebar","SummaryCards","ChartsSection","TransactionsTable","TransactionForm","BudgetForm","BudgetSummary","ProfileSection","NotificationsList","Chatbot","formatMoney","getCategoryIcon","formatMonthlyData","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","Dashboard","activeMenu","setActiveMenu","dashboardData","setDashboardData","user","setUser","notifications","setNotifications","expenseCategories","setExpenseCategories","expenseTransactions","setExpenseTransactions","budgets","setBudgets","monthlyTrends","setMonthlyTrends","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","showTransactionForm","setShowTransactionForm","showBudgetForm","setShowBudgetForm","isSubmitting","setIsSubmitting","formError","setFormError","editingTransaction","setEditingTransaction","isDataLoading","setIsDataLoading","navigate","fetchDashboardData","token","localStorage","getItem","dashboardRes","userRes","notificationsRes","budgetsRes","monthlyRes","Promise","all","get","headers","Authorization","catch","data","processedData","savings_goal","current_amount","Number","target_amount","recent_transactions","expenses","filter","t","type","categoryTotals","forEach","expense","category","amount","Object","entries","map","_ref","name","icon","error","console","removeItem","handleLogout","window","confirm","handleAddNewTransaction","handleEditTransaction","transaction","handleTransactionSubmit","transactionData","put","id","post","refreshData","_error$response","_error$response$data","response","detail","markNotificationAsRead","patch","is_read","prevNotifications","n","handleAddBudget","budget","alert","handleDeleteTransaction","transactionId","delete","_error$response2","_error$response2$data","generateReport","arguments","length","undefined","responseType","url","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","Date","toISOString","split","body","appendChild","click","remove","className","children","income","savings","progressPercentage","charAt","toUpperCase","slice","onClick","disabled","title","transactions","onDelete","onEdit","showFilters","onAdd","showBudgetChart","isOpen","onClose","onSubmit","initialData","categories","incomeCategories","onBudgetAdded"],"sources":["C:/Users/pmwen/OneDrive/Desktop/budgeting-app/budgeting-app-frontend/src/components/dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faFilePdf, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport Sidebar from './Sidebar';\r\nimport SummaryCards from './SummaryCards';\r\nimport ChartsSection from './ChartsSection';\r\nimport TransactionsTable from './TransactionsTable';\r\nimport TransactionForm from './TransactionForm';\r\nimport BudgetForm from './BudgetForm';\r\nimport BudgetSummary from './BudgetSummary';\r\nimport ProfileSection from './ProfileSection';\r\nimport NotificationsList from './NotificationsList';\r\nimport Chatbot from '../common/Chatbot';\r\nimport { formatMoney, getCategoryIcon, formatMonthlyData } from '../common/helpers';\r\nimport './Dashboard.css';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'https://budgetbuddy-backend-eq1x.onrender.com';\r\n\r\nconst Dashboard = () => {\r\n  const [activeMenu, setActiveMenu] = useState('dashboard');\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [expenseCategories, setExpenseCategories] = useState([]);\r\n  const [expenseTransactions, setExpenseTransactions] = useState([]);\r\n  const [budgets, setBudgets] = useState([]);\r\n  const [monthlyTrends, setMonthlyTrends] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [showTransactionForm, setShowTransactionForm] = useState(false);\r\n  const [showBudgetForm, setShowBudgetForm] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [formError, setFormError] = useState('');\r\n  const [editingTransaction, setEditingTransaction] = useState(null);\r\n  const [isDataLoading, setIsDataLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchDashboardData = useCallback(async () => {\r\n    const token = localStorage.getItem('access_token');\r\n    if (!token) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    setIsDataLoading(true);\r\n    try {\r\n      const [dashboardRes, userRes, notificationsRes, budgetsRes, monthlyRes] = await Promise.all([\r\n        axios.get(`${API_BASE_URL}/dashboard/`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        }),\r\n        axios.get(`${API_BASE_URL}/user/`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        }),\r\n        axios.get(`${API_BASE_URL}/notifications/`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        }).catch(() => ({ data: [] })),\r\n        axios.get(`${API_BASE_URL}/budgets/`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        }).catch(() => ({ data: [] })),\r\n        axios.get(`${API_BASE_URL}/transactions/monthly/`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        }).catch(() => ({ data: [] }))\r\n      ]);\r\n\r\n      const processedData = {\r\n        ...dashboardRes.data,\r\n        savings_goal: {\r\n          ...dashboardRes.data.savings_goal,\r\n          current_amount: Number(dashboardRes.data.savings_goal.current_amount),\r\n          target_amount: Number(dashboardRes.data.savings_goal.target_amount)\r\n        }\r\n      };\r\n      \r\n      setDashboardData(processedData);\r\n      setUser(userRes.data);\r\n      setNotifications(notificationsRes.data);\r\n      setBudgets(budgetsRes.data);\r\n      setMonthlyTrends(formatMonthlyData(monthlyRes.data));\r\n\r\n      if (dashboardRes.data.recent_transactions) {\r\n        const expenses = dashboardRes.data.recent_transactions.filter(t => t.type === 'expense');\r\n        setExpenseTransactions(expenses);\r\n        \r\n        const categoryTotals = {};\r\n        expenses.forEach(expense => {\r\n          if (!categoryTotals[expense.category]) {\r\n            categoryTotals[expense.category] = 0;\r\n          }\r\n          categoryTotals[expense.category] += Number(expense.amount);\r\n        });\r\n        \r\n        setExpenseCategories(Object.entries(categoryTotals).map(([name, amount]) => ({\r\n          name,\r\n          amount,\r\n          icon: getCategoryIcon(name)\r\n        })));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      localStorage.removeItem('access_token');\r\n      navigate('/login');\r\n    } finally {\r\n      setIsDataLoading(false);\r\n    }\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    fetchDashboardData();\r\n  }, [fetchDashboardData]);\r\n\r\n  const handleLogout = () => {\r\n    if (window.confirm('Are you sure you want to log out?')) {\r\n      localStorage.removeItem('access_token');\r\n      navigate('/login');\r\n    }\r\n  };\r\n\r\n  const handleAddNewTransaction = useCallback(() => {\r\n    setEditingTransaction(null);\r\n    setShowTransactionForm(true);\r\n  }, []);\r\n\r\n  const handleEditTransaction = useCallback((transaction) => {\r\n    setEditingTransaction(transaction);\r\n    setShowTransactionForm(true);\r\n  }, []);\r\n\r\n  const handleTransactionSubmit = useCallback(async (transactionData) => {\r\n    setIsSubmitting(true);\r\n    setFormError('');\r\n    \r\n    try {\r\n      const token = localStorage.getItem('access_token');\r\n      if (editingTransaction) {\r\n        await axios.put(\r\n          `${API_BASE_URL}/transactions/${editingTransaction.id}/`,\r\n          transactionData,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n      } else {\r\n        await axios.post(\r\n          `${API_BASE_URL}/transactions/`,\r\n          transactionData,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n      }\r\n      await refreshData();\r\n      setShowTransactionForm(false);\r\n      setEditingTransaction(null);\r\n    } catch (error) {\r\n      console.error('Transaction error:', error);\r\n      setFormError(error.response?.data?.detail || 'Failed to save transaction');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  }, [editingTransaction]);\r\n\r\n  const markNotificationAsRead = useCallback(async (id) => {\r\n    const token = localStorage.getItem('access_token');\r\n    try {\r\n      await axios.patch(\r\n        `${API_BASE_URL}/notifications/${id}/`, \r\n        { is_read: true },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setNotifications(prevNotifications => \r\n        prevNotifications.map(n => \r\n          n.id === id ? { ...n, is_read: true } : n\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error('Error marking notification as read:', error);\r\n    }\r\n  }, []);\r\n\r\n  const handleAddBudget = useCallback(async (budget) => {\r\n    const token = localStorage.getItem('access_token');\r\n    try {\r\n      await axios.post(\r\n        `${API_BASE_URL}/budgets/`,\r\n        budget,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      await refreshData();\r\n      setShowBudgetForm(false);\r\n    } catch (error) {\r\n      console.error('Error creating budget:', error);\r\n      alert('Failed to create budget. Please try again.');\r\n    }\r\n  }, []);\r\n\r\n  const handleDeleteTransaction = useCallback(async (transactionId) => {\r\n    const token = localStorage.getItem('access_token');\r\n    try {\r\n      await axios.delete(\r\n        `${API_BASE_URL}/transactions/${transactionId}/`, \r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      await refreshData();\r\n    } catch (error) {\r\n      console.error('Error deleting transaction:', error);\r\n      alert(`Failed to delete transaction. ${error.response?.data?.detail || 'Please try again.'}`);\r\n    }\r\n  }, []);\r\n\r\n  const refreshData = useCallback(async () => {\r\n    const token = localStorage.getItem('access_token');\r\n    try {\r\n      const [dashboardRes, monthlyRes, budgetsRes] = await Promise.all([\r\n        axios.get(`${API_BASE_URL}/dashboard/`, {\r\n          headers: { Authorization: `Bearer ${token}` } }\r\n        ),\r\n        axios.get(`${API_BASE_URL}/transactions/monthly/`, {\r\n          headers: { Authorization: `Bearer ${token}` } }\r\n        ),\r\n        axios.get(`${API_BASE_URL}/budgets/`, {\r\n          headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n      ]);\r\n\r\n      setDashboardData(dashboardRes.data);\r\n      setMonthlyTrends(formatMonthlyData(monthlyRes.data));\r\n      setBudgets(budgetsRes.data);\r\n    } catch (error) {\r\n      console.error('Error refreshing data:', error);\r\n    }\r\n  }, []);\r\n\r\n  const generateReport = useCallback(async (type = 'monthly') => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/reports/?type=${type}`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` },\r\n        responseType: 'blob'\r\n      });\r\n      \r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', `budget_report_${new Date().toISOString().split('T')[0]}.pdf`);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      alert('Failed to generate report');\r\n    }\r\n  }, []);\r\n\r\n  if (!dashboardData || !user) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n\r\n  const { income, expenses, savings_goal, recent_transactions } = dashboardData;\r\n  const savings = income - expenses;\r\n  const progressPercentage = savings_goal.target_amount > 0 \r\n    ? (savings_goal.current_amount / savings_goal.target_amount) * 100 \r\n    : 0;\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <Sidebar \r\n        activeMenu={activeMenu} \r\n        setActiveMenu={setActiveMenu} \r\n        notifications={notifications}\r\n        handleLogout={handleLogout}\r\n      />\r\n\r\n      <div className=\"main-content\">\r\n        <div className=\"content-header\">\r\n          <h1>{activeMenu.charAt(0).toUpperCase() + activeMenu.slice(1)}</h1>\r\n          <div className=\"header-actions\">\r\n            {activeMenu === 'transactions' && (\r\n              <>\r\n                <button \r\n                  className=\"btn btn-primary\"\r\n                  onClick={handleAddNewTransaction}\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <FontAwesomeIcon icon={faPlus} /> \r\n                  {isSubmitting ? 'Processing...' : 'Add Transaction'}\r\n                </button>\r\n                <button \r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => setShowBudgetForm(true)}\r\n                >\r\n                  <FontAwesomeIcon icon={faPlus} /> Add Budget\r\n                </button>\r\n              </>\r\n            )}\r\n            {activeMenu === 'overview' && (\r\n              <button \r\n                className=\"btn btn-secondary\"\r\n                onClick={() => generateReport()}\r\n              >\r\n                <FontAwesomeIcon icon={faFilePdf} /> Generate Report\r\n              </button>\r\n            )}\r\n            <button \r\n              className=\"btn btn-secondary\"\r\n              onClick={handleLogout}\r\n              title=\"Logout\"\r\n            >\r\n              <FontAwesomeIcon icon={faSignOutAlt} /> Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {activeMenu === 'dashboard' && (\r\n          <>\r\n            <SummaryCards \r\n              income={income}\r\n              expenses={expenses}\r\n              savings={savings}\r\n              savings_goal={savings_goal}\r\n              progressPercentage={progressPercentage}\r\n            />\r\n            <ChartsSection \r\n              income={income}\r\n              expenses={expenses}\r\n              monthlyTrends={monthlyTrends}\r\n              expenseCategories={expenseCategories}\r\n              budgets={budgets}\r\n            />\r\n            <TransactionsTable \r\n              transactions={recent_transactions}\r\n              title=\"Recent Transactions\"\r\n              onDelete={handleDeleteTransaction}\r\n              onEdit={handleEditTransaction}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        {activeMenu === 'transactions' && (\r\n          <TransactionsTable \r\n            transactions={dashboardData.recent_transactions || []}\r\n            title=\"Transactions\"\r\n            showFilters={true}\r\n            searchTerm={searchTerm}\r\n            setSearchTerm={setSearchTerm}\r\n            selectedCategory={selectedCategory}\r\n            setSelectedCategory={setSelectedCategory}\r\n            expenseCategories={expenseCategories}\r\n            onDelete={handleDeleteTransaction}\r\n            onEdit={handleEditTransaction}\r\n            onAdd={handleAddNewTransaction}\r\n          />\r\n        )}\r\n\r\n        {activeMenu === 'overview' && (\r\n          <>\r\n            <ChartsSection \r\n              income={income}\r\n              expenses={expenses}\r\n              monthlyTrends={monthlyTrends}\r\n              expenseCategories={expenseCategories}\r\n              budgets={budgets}\r\n              showBudgetChart={true}\r\n            />\r\n            <BudgetSummary \r\n              budgets={budgets}\r\n              expenseCategories={expenseCategories}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        {activeMenu === 'profile' && (\r\n          <ProfileSection \r\n            user={user} \r\n            setUser={setUser}\r\n          />\r\n        )}\r\n\r\n        {activeMenu === 'notifications' && (\r\n          <NotificationsList \r\n            notifications={notifications}\r\n            markNotificationAsRead={markNotificationAsRead}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <Chatbot />\r\n      \r\n      {showTransactionForm && (\r\n        <TransactionForm \r\n          isOpen={showTransactionForm}\r\n          onClose={() => {\r\n            setShowTransactionForm(false);\r\n            setEditingTransaction(null);\r\n          }}\r\n          onSubmit={handleTransactionSubmit}\r\n          initialData={editingTransaction}\r\n          isSubmitting={isSubmitting}\r\n          error={formError}\r\n          categories={[\r\n            'food', 'transportation', 'housing',\r\n            'entertainment', 'utilities', 'health',\r\n            'education', 'other'\r\n          ]}\r\n          incomeCategories={[\r\n            'salary', 'freelance', 'investments',\r\n            'gifts', 'other-income'\r\n          ]}\r\n        />\r\n      )}\r\n\r\n      {showBudgetForm && (\r\n        <BudgetForm \r\n          isOpen={showBudgetForm}\r\n          onClose={() => setShowBudgetForm(false)}\r\n          onBudgetAdded={handleAddBudget}\r\n          expenseCategories={expenseCategories}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}