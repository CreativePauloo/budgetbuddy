{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pmwen\\\\OneDrive\\\\Desktop\\\\budgeting-app\\\\budgeting-app-frontend\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faFilePdf } from '@fortawesome/free-solid-svg-icons';\nimport Sidebar from './Sidebar';\nimport SummaryCards from './SummaryCards';\nimport ChartsSection from './ChartsSection';\nimport TransactionsTable from './TransactionsTable';\nimport TransactionForm from './TransactionForm';\nimport BudgetForm from './BudgetForm';\nimport BudgetSummary from './BudgetSummary';\nimport ProfileSection from './ProfileSection';\nimport NotificationsList from './NotificationsList';\nimport Chatbot from '../common/Chatbot';\nimport { formatMoney, getCategoryIcon, formatMonthlyData } from '../common/helpers';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [activeMenu, setActiveMenu] = useState('dashboard');\n  const [dashboardData, setDashboardData] = useState(null);\n  const [user, setUser] = useState(null);\n  const [notifications, setNotifications] = useState([]);\n  const [expenseCategories, setExpenseCategories] = useState([]);\n  const [expenseTransactions, setExpenseTransactions] = useState([]);\n  const [budgets, setBudgets] = useState([]);\n  const [monthlyTrends, setMonthlyTrends] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [showTransactionForm, setShowTransactionForm] = useState(false);\n  const [showBudgetForm, setShowBudgetForm] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [formError, setFormError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n      try {\n        const [dashboardRes, userRes, notificationsRes, budgetsRes, monthlyRes] = await Promise.all([axios.get('http://localhost:8000/api/dashboard/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get('http://localhost:8000/api/user/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get('http://localhost:8000/api/notifications/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).catch(() => ({\n          data: []\n        })), axios.get('http://localhost:8000/api/budgets/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).catch(() => ({\n          data: []\n        })), axios.get('http://localhost:8000/api/transactions/monthly/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).catch(() => ({\n          data: []\n        }))]);\n        const processedData = {\n          ...dashboardRes.data,\n          savings_goal: {\n            ...dashboardRes.data.savings_goal,\n            current_amount: Number(dashboardRes.data.savings_goal.current_amount),\n            target_amount: Number(dashboardRes.data.savings_goal.target_amount)\n          }\n        };\n        setDashboardData(processedData);\n        setUser(userRes.data);\n        setNotifications(notificationsRes.data);\n        setBudgets(budgetsRes.data);\n        setMonthlyTrends(formatMonthlyData(monthlyRes.data));\n        if (dashboardRes.data.recent_transactions) {\n          const expenses = dashboardRes.data.recent_transactions.filter(t => t.type === 'expense');\n          setExpenseTransactions(expenses);\n          const categoryTotals = {};\n          expenses.forEach(expense => {\n            if (!categoryTotals[expense.category]) {\n              categoryTotals[expense.category] = 0;\n            }\n            categoryTotals[expense.category] += Number(expense.amount);\n          });\n          setExpenseCategories(Object.entries(categoryTotals).map(([name, amount]) => ({\n            name,\n            amount,\n            icon: getCategoryIcon(name)\n          })));\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        localStorage.removeItem('access_token');\n        navigate('/login');\n      }\n    };\n    fetchDashboardData();\n  }, [navigate]);\n  const handleLogout = () => {\n    localStorage.removeItem('access_token');\n    navigate('/login');\n  };\n  const markNotificationAsRead = async id => {\n    const token = localStorage.getItem('access_token');\n    try {\n      await axios.patch(`http://localhost:8000/api/notifications/${id}/`, {\n        is_read: true\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(notifications.map(n => n.id === id ? {\n        ...n,\n        is_read: true\n      } : n));\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n  const generateReport = async (type = 'monthly') => {\n    try {\n      const response = await axios.get(`http://localhost:8000/api/reports/?type=${type}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        },\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `budget_report_${new Date().toISOString().split('T')[0]}.pdf`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      console.error('Error generating report:', error);\n      alert('Failed to generate report');\n    }\n  };\n  const handleAddTransaction = async transaction => {\n    const token = localStorage.getItem('access_token');\n    setIsSubmitting(true);\n    try {\n      await axios.post('http://localhost:8000/api/transactions/', {\n        type: transaction.type,\n        amount: parseFloat(transaction.amount),\n        description: transaction.description,\n        category: transaction.category || 'other',\n        date: transaction.date || new Date().toISOString().split('T')[0]\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      await refreshData();\n      setShowTransactionForm(false);\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Transaction error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      setFormError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Failed to save transaction');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const handleAddBudget = async budget => {\n    const token = localStorage.getItem('access_token');\n    try {\n      await axios.post('http://localhost:8000/api/budgets/', budget, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      await refreshData();\n      setShowBudgetForm(false);\n    } catch (error) {\n      console.error('Error creating budget:', error);\n      alert('Failed to create budget. Please try again.');\n    }\n  };\n  const handleEditTransaction = async transaction => {\n    const token = localStorage.getItem('access_token');\n    try {\n      await axios.put(`http://localhost:8000/api/transactions/${transaction.id}/`, transaction, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      await refreshData();\n    } catch (error) {\n      console.error('Error updating transaction:', error);\n      alert('Failed to update transaction. Please try again.');\n    }\n  };\n  const handleDeleteTransaction = async transactionId => {\n    const token = localStorage.getItem('access_token');\n    try {\n      await axios.delete(`http://localhost:8000/api/transactions/${transactionId}/`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      await refreshData();\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Error deleting transaction:', error);\n      alert(`Failed to delete transaction. ${((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || 'Please try again.'}`);\n    }\n  };\n  const refreshData = async () => {\n    const token = localStorage.getItem('access_token');\n    try {\n      const [dashboardRes, monthlyRes, budgetsRes] = await Promise.all([axios.get('http://localhost:8000/api/dashboard/', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get('http://localhost:8000/api/transactions/monthly/', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get('http://localhost:8000/api/budgets/', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]);\n      setDashboardData(dashboardRes.data);\n      setMonthlyTrends(formatMonthlyData(monthlyRes.data));\n      setBudgets(budgetsRes.data);\n    } catch (error) {\n      console.error('Error refreshing data:', error);\n    }\n  };\n  if (!dashboardData || !user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    income,\n    expenses,\n    savings_goal,\n    recent_transactions\n  } = dashboardData;\n  const savings = income - expenses;\n  const progressPercentage = savings_goal.target_amount > 0 ? savings_goal.current_amount / savings_goal.target_amount * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      activeMenu: activeMenu,\n      setActiveMenu: setActiveMenu,\n      notifications: notifications,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: activeMenu.charAt(0).toUpperCase() + activeMenu.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: [activeMenu === 'expenses' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => setShowTransactionForm(true),\n              disabled: isSubmitting,\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPlus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), isSubmitting ? 'Processing...' : 'Add Transaction']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => setShowBudgetForm(true),\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPlus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this), \" Add Budget\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), activeMenu === 'overview' && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => generateReport(),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faFilePdf\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), \" Generate Report\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), activeMenu === 'dashboard' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SummaryCards, {\n          income: income,\n          expenses: expenses,\n          savings: savings,\n          savings_goal: savings_goal,\n          progressPercentage: progressPercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChartsSection, {\n          income: income,\n          expenses: expenses,\n          monthlyTrends: monthlyTrends,\n          expenseCategories: expenseCategories,\n          budgets: budgets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TransactionsTable, {\n          transactions: recent_transactions,\n          title: \"Recent Transactions\",\n          onDelete: handleDeleteTransaction,\n          onEdit: handleEditTransaction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), activeMenu === 'expenses' && /*#__PURE__*/_jsxDEV(TransactionsTable, {\n        transactions: dashboardData.recent_transactions || [],\n        title: \"Transactions\",\n        showFilters: true,\n        searchTerm: searchTerm,\n        setSearchTerm: setSearchTerm,\n        selectedCategory: selectedCategory,\n        setSelectedCategory: setSelectedCategory,\n        expenseCategories: expenseCategories,\n        onDelete: handleDeleteTransaction,\n        onEdit: handleEditTransaction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), activeMenu === 'overview' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ChartsSection, {\n          income: income,\n          expenses: expenses,\n          monthlyTrends: monthlyTrends,\n          expenseCategories: expenseCategories,\n          budgets: budgets,\n          showBudgetChart: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BudgetSummary, {\n          budgets: budgets,\n          expenseCategories: expenseCategories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), activeMenu === 'profile' && /*#__PURE__*/_jsxDEV(ProfileSection, {\n        user: user,\n        setUser: setUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this), activeMenu === 'notifications' && /*#__PURE__*/_jsxDEV(NotificationsList, {\n        notifications: notifications,\n        markNotificationAsRead: markNotificationAsRead\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chatbot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), showTransactionForm && /*#__PURE__*/_jsxDEV(TransactionForm, {\n      isOpen: showTransactionForm,\n      onClose: () => !isSubmitting && setShowTransactionForm(false),\n      onSubmit: handleAddTransaction,\n      isSubmitting: isSubmitting,\n      error: formError,\n      categories: ['food', 'transportation', 'housing', 'entertainment', 'utilities', 'health', 'education', 'other']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }, this), showBudgetForm && /*#__PURE__*/_jsxDEV(BudgetForm, {\n      isOpen: showBudgetForm,\n      onClose: () => setShowBudgetForm(false),\n      onBudgetAdded: handleAddBudget,\n      expenseCategories: expenseCategories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"V08Ui34j0XX3uIsUGrdF2MX2iRw=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","FontAwesomeIcon","faPlus","faFilePdf","Sidebar","SummaryCards","ChartsSection","TransactionsTable","TransactionForm","BudgetForm","BudgetSummary","ProfileSection","NotificationsList","Chatbot","formatMoney","getCategoryIcon","formatMonthlyData","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","activeMenu","setActiveMenu","dashboardData","setDashboardData","user","setUser","notifications","setNotifications","expenseCategories","setExpenseCategories","expenseTransactions","setExpenseTransactions","budgets","setBudgets","monthlyTrends","setMonthlyTrends","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","showTransactionForm","setShowTransactionForm","showBudgetForm","setShowBudgetForm","isSubmitting","setIsSubmitting","formError","setFormError","navigate","fetchDashboardData","token","localStorage","getItem","dashboardRes","userRes","notificationsRes","budgetsRes","monthlyRes","Promise","all","get","headers","Authorization","catch","data","processedData","savings_goal","current_amount","Number","target_amount","recent_transactions","expenses","filter","t","type","categoryTotals","forEach","expense","category","amount","Object","entries","map","name","icon","error","console","removeItem","handleLogout","markNotificationAsRead","id","patch","is_read","n","generateReport","response","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","Date","toISOString","split","body","appendChild","click","remove","alert","handleAddTransaction","transaction","post","parseFloat","description","date","refreshData","_error$response","_error$response2","_error$response2$data","detail","handleAddBudget","budget","handleEditTransaction","put","handleDeleteTransaction","transactionId","delete","_error$response3","_error$response3$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","income","savings","progressPercentage","charAt","toUpperCase","slice","onClick","disabled","transactions","title","onDelete","onEdit","showFilters","showBudgetChart","isOpen","onClose","onSubmit","categories","onBudgetAdded","_c","$RefreshReg$"],"sources":["C:/Users/pmwen/OneDrive/Desktop/budgeting-app/budgeting-app-frontend/src/components/dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faFilePdf } from '@fortawesome/free-solid-svg-icons';\r\nimport Sidebar from './Sidebar';\r\nimport SummaryCards from './SummaryCards';\r\nimport ChartsSection from './ChartsSection';\r\nimport TransactionsTable from './TransactionsTable';\r\nimport TransactionForm from './TransactionForm';\r\nimport BudgetForm from './BudgetForm';\r\nimport BudgetSummary from './BudgetSummary';\r\nimport ProfileSection from './ProfileSection';\r\nimport NotificationsList from './NotificationsList';\r\nimport Chatbot from '../common/Chatbot';\r\nimport { formatMoney, getCategoryIcon, formatMonthlyData } from '../common/helpers';\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  const [activeMenu, setActiveMenu] = useState('dashboard');\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [expenseCategories, setExpenseCategories] = useState([]);\r\n  const [expenseTransactions, setExpenseTransactions] = useState([]);\r\n  const [budgets, setBudgets] = useState([]);\r\n  const [monthlyTrends, setMonthlyTrends] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [showTransactionForm, setShowTransactionForm] = useState(false);\r\n  const [showBudgetForm, setShowBudgetForm] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [formError, setFormError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      const token = localStorage.getItem('access_token');\r\n      if (!token) {\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const [dashboardRes, userRes, notificationsRes, budgetsRes, monthlyRes] = await Promise.all([\r\n          axios.get('http://localhost:8000/api/dashboard/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }),\r\n          axios.get('http://localhost:8000/api/user/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }),\r\n          axios.get('http://localhost:8000/api/notifications/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }).catch(() => ({ data: [] })),\r\n          axios.get('http://localhost:8000/api/budgets/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }).catch(() => ({ data: [] })),\r\n          axios.get('http://localhost:8000/api/transactions/monthly/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          }).catch(() => ({ data: [] }))\r\n        ]);\r\n\r\n        const processedData = {\r\n          ...dashboardRes.data,\r\n          savings_goal: {\r\n            ...dashboardRes.data.savings_goal,\r\n            current_amount: Number(dashboardRes.data.savings_goal.current_amount),\r\n            target_amount: Number(dashboardRes.data.savings_goal.target_amount)\r\n          }\r\n        };\r\n        \r\n        setDashboardData(processedData);\r\n        setUser(userRes.data);\r\n        setNotifications(notificationsRes.data);\r\n        setBudgets(budgetsRes.data);\r\n        setMonthlyTrends(formatMonthlyData(monthlyRes.data));\r\n\r\n        if (dashboardRes.data.recent_transactions) {\r\n          const expenses = dashboardRes.data.recent_transactions.filter(t => t.type === 'expense');\r\n          setExpenseTransactions(expenses);\r\n          \r\n          const categoryTotals = {};\r\n          expenses.forEach(expense => {\r\n            if (!categoryTotals[expense.category]) {\r\n              categoryTotals[expense.category] = 0;\r\n            }\r\n            categoryTotals[expense.category] += Number(expense.amount);\r\n          });\r\n          \r\n          setExpenseCategories(Object.entries(categoryTotals).map(([name, amount]) => ({\r\n            name,\r\n            amount,\r\n            icon: getCategoryIcon(name)\r\n          })));\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        localStorage.removeItem('access_token');\r\n        navigate('/login');\r\n      }\r\n    };\r\n\r\n    fetchDashboardData();\r\n  }, [navigate]);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('access_token');\r\n    navigate('/login');\r\n  };\r\n\r\n  const markNotificationAsRead = async (id) => {\r\n    const token = localStorage.getItem('access_token');\r\n    try {\r\n      await axios.patch(`http://localhost:8000/api/notifications/${id}/`, \r\n        { is_read: true },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setNotifications(notifications.map(n => \r\n        n.id === id ? { ...n, is_read: true } : n\r\n      ));\r\n    } catch (error) {\r\n      console.error('Error marking notification as read:', error);\r\n    }\r\n  };\r\n\r\n  const generateReport = async (type = 'monthly') => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8000/api/reports/?type=${type}`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` },\r\n        responseType: 'blob'\r\n      });\r\n      \r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', `budget_report_${new Date().toISOString().split('T')[0]}.pdf`);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      alert('Failed to generate report');\r\n    }\r\n  };\r\n\r\n  const handleAddTransaction = async (transaction) => {\r\n    const token = localStorage.getItem('access_token');\r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      await axios.post(\r\n        'http://localhost:8000/api/transactions/',\r\n        {\r\n          type: transaction.type,\r\n          amount: parseFloat(transaction.amount),\r\n          description: transaction.description,\r\n          category: transaction.category || 'other',\r\n          date: transaction.date || new Date().toISOString().split('T')[0]\r\n        },\r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n  \r\n      await refreshData();\r\n      setShowTransactionForm(false);\r\n      \r\n    } catch (error) {\r\n      console.error('Transaction error:', error.response?.data);\r\n      setFormError(error.response?.data?.detail || 'Failed to save transaction');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleAddBudget = async (budget) => {\r\n    const token = localStorage.getItem('access_token');\r\n    try {\r\n      await axios.post(\r\n        'http://localhost:8000/api/budgets/',\r\n        budget,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      await refreshData();\r\n      setShowBudgetForm(false);\r\n    } catch (error) {\r\n      console.error('Error creating budget:', error);\r\n      alert('Failed to create budget. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEditTransaction = async (transaction) => {\r\n    const token = localStorage.getItem('access_token');\r\n    try {\r\n      await axios.put(\r\n        `http://localhost:8000/api/transactions/${transaction.id}/`,\r\n        transaction,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      await refreshData();\r\n    } catch (error) {\r\n      console.error('Error updating transaction:', error);\r\n      alert('Failed to update transaction. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteTransaction = async (transactionId) => {\r\n    const token = localStorage.getItem('access_token');\r\n    try {\r\n      await axios.delete(\r\n        `http://localhost:8000/api/transactions/${transactionId}/`, \r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      await refreshData();\r\n    } catch (error) {\r\n      console.error('Error deleting transaction:', error);\r\n      alert(`Failed to delete transaction. ${error.response?.data?.detail || 'Please try again.'}`);\r\n    }\r\n  };\r\n\r\n  const refreshData = async () => {\r\n    const token = localStorage.getItem('access_token');\r\n    try {\r\n      const [dashboardRes, monthlyRes, budgetsRes] = await Promise.all([\r\n        axios.get('http://localhost:8000/api/dashboard/', {\r\n          headers: { Authorization: `Bearer ${token}` } }\r\n        ),\r\n        axios.get('http://localhost:8000/api/transactions/monthly/', {\r\n          headers: { Authorization: `Bearer ${token}` } }\r\n        ),\r\n        axios.get('http://localhost:8000/api/budgets/', {\r\n          headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n      ]);\r\n\r\n      setDashboardData(dashboardRes.data);\r\n      setMonthlyTrends(formatMonthlyData(monthlyRes.data));\r\n      setBudgets(budgetsRes.data);\r\n    } catch (error) {\r\n      console.error('Error refreshing data:', error);\r\n    }\r\n  };\r\n\r\n  if (!dashboardData || !user) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n\r\n  const { income, expenses, savings_goal, recent_transactions } = dashboardData;\r\n  const savings = income - expenses;\r\n  const progressPercentage = savings_goal.target_amount > 0 \r\n    ? (savings_goal.current_amount / savings_goal.target_amount) * 100 \r\n    : 0;\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <Sidebar \r\n        activeMenu={activeMenu} \r\n        setActiveMenu={setActiveMenu} \r\n        notifications={notifications}\r\n        handleLogout={handleLogout}\r\n      />\r\n\r\n      <div className=\"main-content\">\r\n        <div className=\"content-header\">\r\n          <h1>{activeMenu.charAt(0).toUpperCase() + activeMenu.slice(1)}</h1>\r\n          <div className=\"header-actions\">\r\n            {activeMenu === 'expenses' && (\r\n              <>\r\n                <button \r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => setShowTransactionForm(true)}\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <FontAwesomeIcon icon={faPlus} /> \r\n                  {isSubmitting ? 'Processing...' : 'Add Transaction'}\r\n                </button>\r\n                <button \r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => setShowBudgetForm(true)}\r\n                >\r\n                  <FontAwesomeIcon icon={faPlus} /> Add Budget\r\n                </button>\r\n              </>\r\n            )}\r\n            {activeMenu === 'overview' && (\r\n              <button \r\n                className=\"btn btn-secondary\"\r\n                onClick={() => generateReport()}\r\n              >\r\n                <FontAwesomeIcon icon={faFilePdf} /> Generate Report\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {activeMenu === 'dashboard' && (\r\n          <>\r\n            <SummaryCards \r\n              income={income}\r\n              expenses={expenses}\r\n              savings={savings}\r\n              savings_goal={savings_goal}\r\n              progressPercentage={progressPercentage}\r\n            />\r\n            <ChartsSection \r\n              income={income}\r\n              expenses={expenses}\r\n              monthlyTrends={monthlyTrends}\r\n              expenseCategories={expenseCategories}\r\n              budgets={budgets}\r\n            />\r\n            <TransactionsTable \r\n              transactions={recent_transactions}\r\n              title=\"Recent Transactions\"\r\n              onDelete={handleDeleteTransaction}\r\n              onEdit={handleEditTransaction}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        {activeMenu === 'expenses' && (\r\n          <TransactionsTable \r\n            transactions={dashboardData.recent_transactions || []}\r\n            title=\"Transactions\"\r\n            showFilters={true}\r\n            searchTerm={searchTerm}\r\n            setSearchTerm={setSearchTerm}\r\n            selectedCategory={selectedCategory}\r\n            setSelectedCategory={setSelectedCategory}\r\n            expenseCategories={expenseCategories}\r\n            onDelete={handleDeleteTransaction}\r\n            onEdit={handleEditTransaction}\r\n          />\r\n        )}\r\n\r\n        {activeMenu === 'overview' && (\r\n          <>\r\n            <ChartsSection \r\n              income={income}\r\n              expenses={expenses}\r\n              monthlyTrends={monthlyTrends}\r\n              expenseCategories={expenseCategories}\r\n              budgets={budgets}\r\n              showBudgetChart={true}\r\n            />\r\n            <BudgetSummary \r\n              budgets={budgets}\r\n              expenseCategories={expenseCategories}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        {activeMenu === 'profile' && (\r\n          <ProfileSection \r\n            user={user} \r\n            setUser={setUser}\r\n          />\r\n        )}\r\n\r\n        {activeMenu === 'notifications' && (\r\n          <NotificationsList \r\n            notifications={notifications}\r\n            markNotificationAsRead={markNotificationAsRead}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <Chatbot />\r\n      \r\n      {showTransactionForm && (\r\n        <TransactionForm \r\n          isOpen={showTransactionForm}\r\n          onClose={() => !isSubmitting && setShowTransactionForm(false)}\r\n          onSubmit={handleAddTransaction}\r\n          isSubmitting={isSubmitting}\r\n          error={formError}\r\n          categories={[\r\n            'food', 'transportation', 'housing',\r\n            'entertainment', 'utilities', 'health',\r\n            'education', 'other'\r\n          ]}\r\n        />\r\n      )}\r\n\r\n      {showBudgetForm && (\r\n        <BudgetForm \r\n          isOpen={showBudgetForm}\r\n          onClose={() => setShowBudgetForm(false)}\r\n          onBudgetAdded={handleAddBudget}\r\n          expenseCategories={expenseCategories}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}