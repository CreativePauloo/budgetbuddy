{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pmwen\\\\OneDrive\\\\Desktop\\\\budgeting-app\\\\budgeting-app-frontend\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Sidebar from './Sidebar';\nimport SummaryCards from './SummaryCards';\nimport ChartsSection from './ChartsSection';\nimport TransactionsTable from './TransactionsTable';\nimport BudgetSummary from './BudgetSummary';\nimport ProfileSection from './ProfileSection';\nimport NotificationsList from './NotificationsList';\nimport Chatbot from '../common/Chatbot';\nimport { formatMoney, getCategoryIcon, formatMonthlyData } from '../common/helpers';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [activeMenu, setActiveMenu] = useState('dashboard');\n  const [dashboardData, setDashboardData] = useState(null);\n  const [user, setUser] = useState(null);\n  const [notifications, setNotifications] = useState([]);\n  const [expenseCategories, setExpenseCategories] = useState([]);\n  const [expenseTransactions, setExpenseTransactions] = useState([]);\n  const [budgets, setBudgets] = useState([]);\n  const [monthlyTrends, setMonthlyTrends] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n      try {\n        // Fetch dashboard data\n        const dashboardResponse = await axios.get('http://localhost:8000/api/dashboard/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Process dashboard data\n        const processedData = {\n          ...dashboardResponse.data,\n          savings_goal: {\n            ...dashboardResponse.data.savings_goal,\n            current_amount: Number(dashboardResponse.data.savings_goal.current_amount),\n            target_amount: Number(dashboardResponse.data.savings_goal.target_amount)\n          }\n        };\n        setDashboardData(processedData);\n\n        // Process transactions and categories\n        if (dashboardResponse.data.recent_transactions) {\n          const expenses = dashboardResponse.data.recent_transactions.filter(t => t.type === 'expense');\n          setExpenseTransactions(expenses);\n          const categoryTotals = {};\n          expenses.forEach(expense => {\n            if (!categoryTotals[expense.category]) {\n              categoryTotals[expense.category] = 0;\n            }\n            categoryTotals[expense.category] += Number(expense.amount);\n          });\n          setExpenseCategories(Object.entries(categoryTotals).map(([name, amount]) => ({\n            name,\n            amount,\n            icon: getCategoryIcon(name)\n          })));\n        }\n\n        // Fetch user data\n        const userResponse = await axios.get('http://localhost:8000/api/user/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUser(userResponse.data);\n\n        // Fetch notifications\n        try {\n          const notificationsResponse = await axios.get('http://localhost:8000/api/notifications/', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setNotifications(notificationsResponse.data);\n        } catch (error) {\n          console.warn('Notifications endpoint not available');\n          setNotifications([]);\n        }\n\n        // Fetch budgets\n        try {\n          const budgetsResponse = await axios.get('http://localhost:8000/api/budgets/', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setBudgets(budgetsResponse.data);\n        } catch (error) {\n          console.warn('Budgets endpoint not available');\n          setBudgets([]);\n        }\n\n        // Fetch monthly trends\n        try {\n          const trendsResponse = await axios.get('http://localhost:8000/api/transactions/monthly/', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setMonthlyTrends(formatMonthlyData(trendsResponse.data));\n        } catch (error) {\n          console.warn('Monthly trends endpoint not available');\n          setMonthlyTrends(null);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        localStorage.removeItem('access_token');\n        navigate('/login');\n      }\n    };\n    fetchDashboardData();\n  }, [navigate]);\n  const handleLogout = () => {\n    localStorage.removeItem('access_token');\n    navigate('/login');\n  };\n  const markNotificationAsRead = async id => {\n    const token = localStorage.getItem('access_token');\n    try {\n      await axios.patch(`http://localhost:8000/api/notifications/${id}/`, {\n        is_read: true\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(notifications.map(n => n.id === id ? {\n        ...n,\n        is_read: true\n      } : n));\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n  const generateReport = async (type = 'monthly') => {\n    try {\n      const response = await axios.get(`http://localhost:8000/api/reports/?type=${type}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        },\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `budget_report_${new Date().toISOString().split('T')[0]}.pdf`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      console.error('Error generating report:', error);\n      alert('Failed to generate report');\n    }\n  };\n  if (!dashboardData || !user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    income,\n    expenses,\n    savings_goal,\n    recent_transactions\n  } = dashboardData;\n  const savings = income - expenses;\n  const progressPercentage = savings_goal.target_amount > 0 ? savings_goal.current_amount / savings_goal.target_amount * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      activeMenu: activeMenu,\n      setActiveMenu: setActiveMenu,\n      notifications: notifications,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: activeMenu.charAt(0).toUpperCase() + activeMenu.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: [activeMenu === 'expenses' && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => setShowTransactionForm(true),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), \" Add Transaction\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), activeMenu === 'overview' && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => generateReport(),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faFilePdf\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), \" Generate Report\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), activeMenu === 'dashboard' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SummaryCards, {\n          income: income,\n          expenses: expenses,\n          savings: savings,\n          savings_goal: savings_goal,\n          progressPercentage: progressPercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChartsSection, {\n          income: income,\n          expenses: expenses,\n          monthlyTrends: monthlyTrends,\n          expenseCategories: expenseCategories,\n          budgets: budgets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TransactionsTable, {\n          transactions: recent_transactions,\n          title: \"Recent Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), activeMenu === 'expenses' && /*#__PURE__*/_jsxDEV(TransactionsTable, {\n        transactions: expenseTransactions,\n        title: \"Expenses\",\n        showFilters: true,\n        searchTerm: searchTerm,\n        setSearchTerm: setSearchTerm,\n        selectedCategory: selectedCategory,\n        setSelectedCategory: setSelectedCategory,\n        expenseCategories: expenseCategories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), activeMenu === 'overview' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ChartsSection, {\n          income: income,\n          expenses: expenses,\n          monthlyTrends: monthlyTrends,\n          expenseCategories: expenseCategories,\n          budgets: budgets,\n          showBudgetChart: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BudgetSummary, {\n          budgets: budgets,\n          expenseCategories: expenseCategories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), activeMenu === 'profile' && /*#__PURE__*/_jsxDEV(ProfileSection, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), activeMenu === 'notifications' && /*#__PURE__*/_jsxDEV(NotificationsList, {\n        notifications: notifications,\n        markNotificationAsRead: markNotificationAsRead\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chatbot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"qL5fXRHNUMQfaimoQdNx3b+EHio=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Sidebar","SummaryCards","ChartsSection","TransactionsTable","BudgetSummary","ProfileSection","NotificationsList","Chatbot","formatMoney","getCategoryIcon","formatMonthlyData","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","activeMenu","setActiveMenu","dashboardData","setDashboardData","user","setUser","notifications","setNotifications","expenseCategories","setExpenseCategories","expenseTransactions","setExpenseTransactions","budgets","setBudgets","monthlyTrends","setMonthlyTrends","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","navigate","fetchDashboardData","token","localStorage","getItem","dashboardResponse","get","headers","Authorization","processedData","data","savings_goal","current_amount","Number","target_amount","recent_transactions","expenses","filter","t","type","categoryTotals","forEach","expense","category","amount","Object","entries","map","name","icon","userResponse","notificationsResponse","error","console","warn","budgetsResponse","trendsResponse","removeItem","handleLogout","markNotificationAsRead","id","patch","is_read","n","generateReport","response","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","Date","toISOString","split","body","appendChild","click","remove","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","income","savings","progressPercentage","charAt","toUpperCase","slice","onClick","setShowTransactionForm","FontAwesomeIcon","faPlus","faFilePdf","transactions","title","showFilters","showBudgetChart","_c","$RefreshReg$"],"sources":["C:/Users/pmwen/OneDrive/Desktop/budgeting-app/budgeting-app-frontend/src/components/dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Sidebar from './Sidebar';\r\nimport SummaryCards from './SummaryCards';\r\nimport ChartsSection from './ChartsSection';\r\nimport TransactionsTable from './TransactionsTable';\r\nimport BudgetSummary from './BudgetSummary';\r\nimport ProfileSection from './ProfileSection';\r\nimport NotificationsList from './NotificationsList';\r\nimport Chatbot from '../common/Chatbot';\r\nimport { formatMoney, getCategoryIcon, formatMonthlyData } from '../common/helpers';\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  const [activeMenu, setActiveMenu] = useState('dashboard');\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [expenseCategories, setExpenseCategories] = useState([]);\r\n  const [expenseTransactions, setExpenseTransactions] = useState([]);\r\n  const [budgets, setBudgets] = useState([]);\r\n  const [monthlyTrends, setMonthlyTrends] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      const token = localStorage.getItem('access_token');\r\n      if (!token) {\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Fetch dashboard data\r\n        const dashboardResponse = await axios.get('http://localhost:8000/api/dashboard/', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        \r\n        // Process dashboard data\r\n        const processedData = {\r\n          ...dashboardResponse.data,\r\n          savings_goal: {\r\n            ...dashboardResponse.data.savings_goal,\r\n            current_amount: Number(dashboardResponse.data.savings_goal.current_amount),\r\n            target_amount: Number(dashboardResponse.data.savings_goal.target_amount)\r\n          }\r\n        };\r\n        \r\n        setDashboardData(processedData);\r\n        \r\n        // Process transactions and categories\r\n        if (dashboardResponse.data.recent_transactions) {\r\n          const expenses = dashboardResponse.data.recent_transactions.filter(t => t.type === 'expense');\r\n          setExpenseTransactions(expenses);\r\n          \r\n          const categoryTotals = {};\r\n          expenses.forEach(expense => {\r\n            if (!categoryTotals[expense.category]) {\r\n              categoryTotals[expense.category] = 0;\r\n            }\r\n            categoryTotals[expense.category] += Number(expense.amount);\r\n          });\r\n          \r\n          setExpenseCategories(Object.entries(categoryTotals).map(([name, amount]) => ({\r\n            name,\r\n            amount,\r\n            icon: getCategoryIcon(name)\r\n          })));\r\n        }\r\n\r\n        // Fetch user data\r\n        const userResponse = await axios.get('http://localhost:8000/api/user/', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        setUser(userResponse.data);\r\n\r\n        // Fetch notifications\r\n        try {\r\n          const notificationsResponse = await axios.get('http://localhost:8000/api/notifications/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          });\r\n          setNotifications(notificationsResponse.data);\r\n        } catch (error) {\r\n          console.warn('Notifications endpoint not available');\r\n          setNotifications([]);\r\n        }\r\n\r\n        // Fetch budgets\r\n        try {\r\n          const budgetsResponse = await axios.get('http://localhost:8000/api/budgets/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          });\r\n          setBudgets(budgetsResponse.data);\r\n        } catch (error) {\r\n          console.warn('Budgets endpoint not available');\r\n          setBudgets([]);\r\n        }\r\n\r\n        // Fetch monthly trends\r\n        try {\r\n          const trendsResponse = await axios.get('http://localhost:8000/api/transactions/monthly/', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          });\r\n          setMonthlyTrends(formatMonthlyData(trendsResponse.data));\r\n        } catch (error) {\r\n          console.warn('Monthly trends endpoint not available');\r\n          setMonthlyTrends(null);\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        localStorage.removeItem('access_token');\r\n        navigate('/login');\r\n      }\r\n    };\r\n\r\n    fetchDashboardData();\r\n  }, [navigate]);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('access_token');\r\n    navigate('/login');\r\n  };\r\n\r\n  const markNotificationAsRead = async (id) => {\r\n    const token = localStorage.getItem('access_token');\r\n    try {\r\n      await axios.patch(`http://localhost:8000/api/notifications/${id}/`, \r\n        { is_read: true },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setNotifications(notifications.map(n => \r\n        n.id === id ? { ...n, is_read: true } : n\r\n      ));\r\n    } catch (error) {\r\n      console.error('Error marking notification as read:', error);\r\n    }\r\n  };\r\n\r\n  const generateReport = async (type = 'monthly') => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8000/api/reports/?type=${type}`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` },\r\n        responseType: 'blob'\r\n      });\r\n      \r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', `budget_report_${new Date().toISOString().split('T')[0]}.pdf`);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      alert('Failed to generate report');\r\n    }\r\n  };\r\n\r\n  if (!dashboardData || !user) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n\r\n  const { income, expenses, savings_goal, recent_transactions } = dashboardData;\r\n  const savings = income - expenses;\r\n  const progressPercentage = savings_goal.target_amount > 0 \r\n    ? (savings_goal.current_amount / savings_goal.target_amount) * 100 \r\n    : 0;\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <Sidebar \r\n        activeMenu={activeMenu} \r\n        setActiveMenu={setActiveMenu} \r\n        notifications={notifications}\r\n        handleLogout={handleLogout}\r\n      />\r\n\r\n      <div className=\"main-content\">\r\n        <div className=\"content-header\">\r\n          <h1>{activeMenu.charAt(0).toUpperCase() + activeMenu.slice(1)}</h1>\r\n          <div className=\"header-actions\">\r\n            {activeMenu === 'expenses' && (\r\n              <button \r\n                className=\"btn btn-primary\"\r\n                onClick={() => setShowTransactionForm(true)}\r\n              >\r\n                <FontAwesomeIcon icon={faPlus} /> Add Transaction\r\n              </button>\r\n            )}\r\n            {activeMenu === 'overview' && (\r\n              <button \r\n                className=\"btn btn-secondary\"\r\n                onClick={() => generateReport()}\r\n              >\r\n                <FontAwesomeIcon icon={faFilePdf} /> Generate Report\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {activeMenu === 'dashboard' && (\r\n          <>\r\n            <SummaryCards \r\n              income={income}\r\n              expenses={expenses}\r\n              savings={savings}\r\n              savings_goal={savings_goal}\r\n              progressPercentage={progressPercentage}\r\n            />\r\n            <ChartsSection \r\n              income={income}\r\n              expenses={expenses}\r\n              monthlyTrends={monthlyTrends}\r\n              expenseCategories={expenseCategories}\r\n              budgets={budgets}\r\n            />\r\n            <TransactionsTable \r\n              transactions={recent_transactions}\r\n              title=\"Recent Transactions\"\r\n            />\r\n          </>\r\n        )}\r\n\r\n        {activeMenu === 'expenses' && (\r\n          <TransactionsTable \r\n            transactions={expenseTransactions}\r\n            title=\"Expenses\"\r\n            showFilters={true}\r\n            searchTerm={searchTerm}\r\n            setSearchTerm={setSearchTerm}\r\n            selectedCategory={selectedCategory}\r\n            setSelectedCategory={setSelectedCategory}\r\n            expenseCategories={expenseCategories}\r\n          />\r\n        )}\r\n\r\n        {activeMenu === 'overview' && (\r\n          <>\r\n            <ChartsSection \r\n              income={income}\r\n              expenses={expenses}\r\n              monthlyTrends={monthlyTrends}\r\n              expenseCategories={expenseCategories}\r\n              budgets={budgets}\r\n              showBudgetChart={true}\r\n            />\r\n            <BudgetSummary \r\n              budgets={budgets}\r\n              expenseCategories={expenseCategories}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        {activeMenu === 'profile' && (\r\n          <ProfileSection user={user} />\r\n        )}\r\n\r\n        {activeMenu === 'notifications' && (\r\n          <NotificationsList \r\n            notifications={notifications}\r\n            markNotificationAsRead={markNotificationAsRead}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <Chatbot />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}