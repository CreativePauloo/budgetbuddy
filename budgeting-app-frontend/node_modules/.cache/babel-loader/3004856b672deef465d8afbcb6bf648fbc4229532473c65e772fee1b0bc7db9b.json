{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pmwen\\\\OneDrive\\\\Desktop\\\\budgeting-app\\\\budgeting-app-frontend\\\\src\\\\components\\\\dashboard\\\\TransactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faMagic, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport './TransactionForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionForm = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  initialData = null,\n  isSubmitting = false,\n  error = '',\n  categories = [],\n  incomeCategories = []\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    type: 'expense',\n    amount: '',\n    description: '',\n    category: categories.length > 0 ? categories[0] : '',\n    date: new Date().toISOString().split('T')[0]\n  });\n  const [aiSuggestions, setAiSuggestions] = useState([]);\n  const [isPredicting, setIsPredicting] = useState(false);\n  const prevDescription = useRef('');\n  const prevAmount = useRef('');\n\n  // Reset form when opening/closing or when initialData changes\n  useEffect(() => {\n    if (isOpen) {\n      if (initialData) {\n        var _initialData$date;\n        setFormData({\n          type: initialData.type,\n          amount: initialData.amount.toString(),\n          description: initialData.description,\n          category: initialData.category,\n          date: ((_initialData$date = initialData.date) === null || _initialData$date === void 0 ? void 0 : _initialData$date.split('T')[0]) || new Date().toISOString().split('T')[0]\n        });\n        setAiSuggestions([]);\n      } else {\n        setFormData({\n          type: 'expense',\n          amount: '',\n          description: '',\n          category: categories.length > 0 ? categories[0] : '',\n          date: new Date().toISOString().split('T')[0]\n        });\n      }\n    }\n  }, [isOpen, initialData, categories]);\n\n  // Handle AI suggestions without creating a loop\n  useEffect(() => {\n    if (!isOpen || isPredicting) return;\n    const descriptionChanged = formData.description !== prevDescription.current;\n    const amountChanged = formData.amount !== prevAmount.current;\n    if ((descriptionChanged || amountChanged) && formData.description.length > 3 && formData.amount) {\n      const timer = setTimeout(async () => {\n        setIsPredicting(true);\n        try {\n          const response = await axios.post('http://localhost:8000/api/predict-category/', {\n            description: formData.description,\n            amount: formData.amount,\n            date: formData.date\n          });\n          setAiSuggestions([{\n            name: response.data.category,\n            confidence: response.data.confidence,\n            isSelected: false\n          }, ...response.data.alternatives.map(alt => ({\n            name: alt.category,\n            confidence: alt.score,\n            isSelected: false\n          }))]);\n          if (response.data.confidence > 0.7) {\n            setFormData(prev => ({\n              ...prev,\n              category: response.data.category\n            }));\n          }\n        } catch (error) {\n          console.error('Prediction failed:', error);\n        } finally {\n          setIsPredicting(false);\n        }\n      }, 500);\n      prevDescription.current = formData.description;\n      prevAmount.current = formData.amount;\n      return () => clearTimeout(timer);\n    }\n  }, [formData.description, formData.amount, formData.date, isOpen, isPredicting]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (name === 'type') {\n      const newCategories = value === 'income' ? incomeCategories : categories;\n      setFormData(prev => ({\n        ...prev,\n        category: newCategories.length > 0 ? newCategories[0] : ''\n      }));\n    }\n  };\n  const handleSuggestionSelect = category => {\n    setFormData(prev => ({\n      ...prev,\n      category\n    }));\n    setAiSuggestions(prev => prev.map(suggestion => ({\n      ...suggestion,\n      isSelected: suggestion.name === category\n    })));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const transactionData = {\n      ...formData,\n      amount: parseFloat(formData.amount),\n      date: formData.date || new Date().toISOString().split('T')[0]\n    };\n    onSubmit(transactionData);\n  };\n  const currentCategories = formData.type === 'income' ? incomeCategories : categories;\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: () => !isSubmitting && onClose(),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: initialData ? 'Edit Transaction' : 'Add Transaction'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => !isSubmitting && onClose(),\n          disabled: isSubmitting,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Transaction Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"radio-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"type\",\n                  value: \"expense\",\n                  checked: formData.type === 'expense',\n                  onChange: handleChange,\n                  disabled: isSubmitting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-custom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this), \"Expense\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"type\",\n                  value: \"income\",\n                  checked: formData.type === 'income',\n                  onChange: handleChange,\n                  disabled: isSubmitting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-custom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this), \"Income\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"amount\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"amount\",\n              name: \"amount\",\n              value: formData.amount,\n              onChange: handleChange,\n              step: \"0.01\",\n              min: \"0\",\n              required: true,\n              disabled: isSubmitting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description-with-ai\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"description\",\n                name: \"description\",\n                value: formData.description,\n                onChange: handleChange,\n                required: true,\n                disabled: isSubmitting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), isPredicting && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ai-loading\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faMagic,\n                  spin: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), aiSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-suggestions\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"AI Suggestions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestion-buttons\",\n              children: aiSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `suggestion ${suggestion.isSelected ? 'selected' : ''}`,\n                onClick: () => handleSuggestionSelect(suggestion.name),\n                children: [suggestion.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"confidence-badge\",\n                  children: [Math.round(suggestion.confidence * 100), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this), suggestion.isSelected && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCheckCircle,\n                  className: \"selected-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"category\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"category\",\n              name: \"category\",\n              value: formData.category,\n              onChange: handleChange,\n              required: true,\n              disabled: isSubmitting,\n              children: currentCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category,\n                children: category.charAt(0).toUpperCase() + category.slice(1)\n              }, category, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"date\",\n              name: \"date\",\n              value: formData.date,\n              onChange: handleChange,\n              required: true,\n              disabled: isSubmitting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => !isSubmitting && onClose(),\n              className: \"btn btn-secondary\",\n              disabled: isSubmitting,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: isSubmitting,\n              children: isSubmitting ? 'Processing...' : initialData ? 'Update' : 'Add'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionForm, \"Qgnr6mVwLETaZ3ltffpdK/cxw8Y=\");\n_c = TransactionForm;\nexport default TransactionForm;\nvar _c;\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FontAwesomeIcon","faTimes","faMagic","faCheckCircle","axios","jsxDEV","_jsxDEV","TransactionForm","isOpen","onClose","onSubmit","initialData","isSubmitting","error","categories","incomeCategories","_s","formData","setFormData","type","amount","description","category","length","date","Date","toISOString","split","aiSuggestions","setAiSuggestions","isPredicting","setIsPredicting","prevDescription","prevAmount","_initialData$date","toString","descriptionChanged","current","amountChanged","timer","setTimeout","response","post","name","data","confidence","isSelected","alternatives","map","alt","score","prev","console","clearTimeout","handleChange","e","value","target","newCategories","handleSuggestionSelect","suggestion","handleSubmit","preventDefault","transactionData","parseFloat","currentCategories","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","disabled","icon","checked","onChange","htmlFor","id","step","min","required","spin","index","Math","round","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["C:/Users/pmwen/OneDrive/Desktop/budgeting-app/budgeting-app-frontend/src/components/dashboard/TransactionForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faMagic, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport './TransactionForm.css';\r\n\r\nconst TransactionForm = ({ \r\n  isOpen, \r\n  onClose, \r\n  onSubmit, \r\n  initialData = null, \r\n  isSubmitting = false,\r\n  error = '',\r\n  categories = [],\r\n  incomeCategories = []\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    type: 'expense',\r\n    amount: '',\r\n    description: '',\r\n    category: categories.length > 0 ? categories[0] : '',\r\n    date: new Date().toISOString().split('T')[0]\r\n  });\r\n\r\n  const [aiSuggestions, setAiSuggestions] = useState([]);\r\n  const [isPredicting, setIsPredicting] = useState(false);\r\n  const prevDescription = useRef('');\r\n  const prevAmount = useRef('');\r\n\r\n  // Reset form when opening/closing or when initialData changes\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      if (initialData) {\r\n        setFormData({\r\n          type: initialData.type,\r\n          amount: initialData.amount.toString(),\r\n          description: initialData.description,\r\n          category: initialData.category,\r\n          date: initialData.date?.split('T')[0] || new Date().toISOString().split('T')[0]\r\n        });\r\n        setAiSuggestions([]);\r\n      } else {\r\n        setFormData({\r\n          type: 'expense',\r\n          amount: '',\r\n          description: '',\r\n          category: categories.length > 0 ? categories[0] : '',\r\n          date: new Date().toISOString().split('T')[0]\r\n        });\r\n      }\r\n    }\r\n  }, [isOpen, initialData, categories]);\r\n\r\n  // Handle AI suggestions without creating a loop\r\n  useEffect(() => {\r\n    if (!isOpen || isPredicting) return;\r\n\r\n    const descriptionChanged = formData.description !== prevDescription.current;\r\n    const amountChanged = formData.amount !== prevAmount.current;\r\n\r\n    if ((descriptionChanged || amountChanged) && \r\n        formData.description.length > 3 && \r\n        formData.amount) {\r\n      const timer = setTimeout(async () => {\r\n        setIsPredicting(true);\r\n        try {\r\n          const response = await axios.post(\r\n            'http://localhost:8000/api/predict-category/',\r\n            {\r\n              description: formData.description,\r\n              amount: formData.amount,\r\n              date: formData.date\r\n            }\r\n          );\r\n          \r\n          setAiSuggestions([\r\n            { \r\n              name: response.data.category, \r\n              confidence: response.data.confidence,\r\n              isSelected: false \r\n            },\r\n            ...response.data.alternatives.map(alt => ({\r\n              name: alt.category,\r\n              confidence: alt.score,\r\n              isSelected: false\r\n            }))\r\n          ]);\r\n\r\n          if (response.data.confidence > 0.7) {\r\n            setFormData(prev => ({\r\n              ...prev,\r\n              category: response.data.category\r\n            }));\r\n          }\r\n        } catch (error) {\r\n          console.error('Prediction failed:', error);\r\n        } finally {\r\n          setIsPredicting(false);\r\n        }\r\n      }, 500);\r\n\r\n      prevDescription.current = formData.description;\r\n      prevAmount.current = formData.amount;\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [formData.description, formData.amount, formData.date, isOpen, isPredicting]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    \r\n    if (name === 'type') {\r\n      const newCategories = value === 'income' ? incomeCategories : categories;\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        category: newCategories.length > 0 ? newCategories[0] : ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSuggestionSelect = (category) => {\r\n    setFormData(prev => ({ ...prev, category }));\r\n    setAiSuggestions(prev => \r\n      prev.map(suggestion => ({\r\n        ...suggestion,\r\n        isSelected: suggestion.name === category\r\n      }))\r\n    );\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const transactionData = {\r\n      ...formData,\r\n      amount: parseFloat(formData.amount),\r\n      date: formData.date || new Date().toISOString().split('T')[0]\r\n    };\r\n    onSubmit(transactionData);\r\n  };\r\n\r\n  const currentCategories = formData.type === 'income' ? incomeCategories : categories;\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={() => !isSubmitting && onClose()}>\r\n      <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h2>{initialData ? 'Edit Transaction' : 'Add Transaction'}</h2>\r\n          <button \r\n            className=\"close-btn\" \r\n            onClick={() => !isSubmitting && onClose()} \r\n            disabled={isSubmitting}\r\n          >\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-content\">\r\n          {error && <div className=\"form-error\">{error}</div>}\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Transaction Type</label>\r\n              <div className=\"radio-group\">\r\n                <label className=\"radio-label\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"type\"\r\n                    value=\"expense\"\r\n                    checked={formData.type === 'expense'}\r\n                    onChange={handleChange}\r\n                    disabled={isSubmitting}\r\n                  />\r\n                  <span className=\"radio-custom\"></span>\r\n                  Expense\r\n                </label>\r\n                <label className=\"radio-label\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"type\"\r\n                    value=\"income\"\r\n                    checked={formData.type === 'income'}\r\n                    onChange={handleChange}\r\n                    disabled={isSubmitting}\r\n                  />\r\n                  <span className=\"radio-custom\"></span>\r\n                  Income\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"amount\">Amount</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"amount\"\r\n                name=\"amount\"\r\n                value={formData.amount}\r\n                onChange={handleChange}\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                required\r\n                disabled={isSubmitting}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <div className=\"description-with-ai\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  value={formData.description}\r\n                  onChange={handleChange}\r\n                  required\r\n                  disabled={isSubmitting}\r\n                />\r\n                {isPredicting && (\r\n                  <span className=\"ai-loading\">\r\n                    <FontAwesomeIcon icon={faMagic} spin />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {aiSuggestions.length > 0 && (\r\n              <div className=\"ai-suggestions\">\r\n                <label>AI Suggestions</label>\r\n                <div className=\"suggestion-buttons\">\r\n                  {aiSuggestions.map((suggestion, index) => (\r\n                    <button\r\n                      type=\"button\"\r\n                      key={index}\r\n                      className={`suggestion ${suggestion.isSelected ? 'selected' : ''}`}\r\n                      onClick={() => handleSuggestionSelect(suggestion.name)}\r\n                    >\r\n                      {suggestion.name}\r\n                      <span className=\"confidence-badge\">\r\n                        {Math.round(suggestion.confidence * 100)}%\r\n                      </span>\r\n                      {suggestion.isSelected && (\r\n                        <FontAwesomeIcon icon={faCheckCircle} className=\"selected-icon\" />\r\n                      )}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"category\">Category</label>\r\n              <select\r\n                id=\"category\"\r\n                name=\"category\"\r\n                value={formData.category}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={isSubmitting}\r\n              >\r\n                {currentCategories.map(category => (\r\n                  <option key={category} value={category}>\r\n                    {category.charAt(0).toUpperCase() + category.slice(1)}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"date\">Date</label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"date\"\r\n                name=\"date\"\r\n                value={formData.date}\r\n                onChange={handleChange}\r\n                required\r\n                disabled={isSubmitting}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-actions\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => !isSubmitting && onClose()}\r\n                className=\"btn btn-secondary\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                disabled={isSubmitting}\r\n              >\r\n                {isSubmitting ? 'Processing...' : initialData ? 'Update' : 'Add'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}